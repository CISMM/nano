MAKEFILE_DEPEND := $(OBJECT_DIR)/.depend

ifeq ($(findstring depend,$(MAKECMDGOALS)),depend)
   DUMMY := $(shell mv -f $(MAKEFILE_DEPEND) $(MAKEFILE_DEPEND)-old)
else
   -include $(MAKEFILE_DEPEND)
endif

##############################################################################
#
# Expand the uses libs stuff
#

DEPEND := $(shell test -r $(MAKEFILE_DEPEND) && echo "true")
ifneq ($(DEPEND),true)
   ifdef USES_LIBS
      USES_LIBS_TMP := $(foreach lib,$(USES_LIBS),$(shell $(SEARCH_PROG) $(HW_OS) $(lib) $(SEARCH_PATH)))
      USES_LIBS_INC := $(filter-out -L%,$(USES_LIBS_TMP))
      USES_LIBS_LD  := $(filter-out -I%,$(USES_LIBS_TMP))
      USES_LIBS_LIB := $(addprefix -l,$(USES_LIBS))
   endif

   ifdef NAUGHTY
      USES_LIBS_INC += -I$(TOP_LEVEL_SRC_DIR)/app/nano
   endif
endif

##############################################################################
#
# Compile list of files for dependencies
#

SRC_LIST := $(APP_SRC) $(LIBRARY_SRC)

ifdef APP_EXEC
   APP_LIST := "$(APP_EXEC): $(join $(patsubst -L%,%,$(USES_LIBS_LD)),$(addprefix /lib,$(addsuffix .a,$(USES_LIBS))))"
endif

.PHONY: depend
depend: $(OBJECT_DIR) $(MAKEFILE_DEPEND)

$(MAKEFILE_DEPEND):
	@echo ----------------------------------------------------------------
	@echo -- Making dependency file.  If you add files to the makefile,
	@echo -- or add/remove includes from a .h or .C file, then you should
	@echo -- remake the dependency file by typing \"$(MAKE) depend\"
	@echo ----------------------------------------------------------------
	$(shell $(CC) -M $(CFLAGS) $(DEFINES) $(USES_LIBS_INC) $(INCLUDE_FLAGS) $(SRC_LIST) | perl -pe "s|(.*\\.o\\w*:)|$(OBJECT_DIR)/\\1|g;" > $(MAKEFILE_DEPEND))
	$(shell echo $(APP_LIST) >> $(MAKEFILE_DEPEND))
	$(shell echo DEP_LIBS_INC := $(USES_LIBS_INC) >> $(MAKEFILE_DEPEND))
	$(shell echo DEP_LIBS_LD := $(USES_LIBS_LD) >> $(MAKEFILE_DEPEND))
	$(shell echo DEP_LIBS_LIB := $(USES_LIBS_LIB) >> $(MAKEFILE_DEPEND))
