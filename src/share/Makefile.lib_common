##############################################################################
#
# Typical stuff
#

CWD := $(shell $(PWD_COMMAND))

THIS_DIR := $(subst $(TOP_LEVEL_SRC_DIR),,$(CWD))

OBJECT_DIR := $(join $(FULL_OBJECT_DIR),$(THIS_DIR))

DIR := $(shell test -d $(REAL_OBJECT_DIR) && echo "true")
ifneq ($(DIR),true)
   DUMMY := $(shell mkdir -p $(REAL_OBJECT_DIR))
endif
ifndef VC
DIR := $(shell test -l $(FULL_OBJECT_DIR) && echo "true")
ifneq ($(DIR),true)
   DUMMY := $(shell $(LINK) $(REAL_OBJECT_DIR)/ $(FULL_OBJECT_DIR))
endif
endif
DIR := $(shell test -d $(OBJECT_DIR) && echo "true")
ifneq ($(DIR),true)
   DUMMY := $(shell mkdir -p $(OBJECT_DIR))
endif

###############################################################################
#
# Extras?
#

ifdef EXTRA_CFLAGS
   CFLAGS += $(EXTRA_CFLAGS)
endif

###############################################################################
#
# Specifics for a library
#

ifndef SRC_SUFFIXES
   SRC_SUFFIXES := .C .c .cc
endif

ifndef LIBRARY_SRC
   LIBRARY_SRC := $(foreach suffix,$(SRC_SUFFIXES),$(wildcard *$(suffix)))
   LIBRARY_SRC := $(filter-out $(EXCLUDE_SRC),$(LIBRARY_SRC))
endif

ifndef LIBRARY_OBJ
ifeq ($(HW_OS),pc_win32)
   LIBRARY_OBJ := $(addprefix $(OBJECT_DIR)/, \
                              $(addsuffix .obj,$(basename $(LIBRARY_SRC))))
   OBJECT_SUFFIX := .obj

else 
   LIBRARY_OBJ := $(addprefix $(OBJECT_DIR)/, \
                              $(addsuffix .o,$(basename $(LIBRARY_SRC))))
   OBJECT_SUFFIX := .o
endif
endif

ifndef LIBRARY_NAME
ifeq ($(HW_OS),pc_win32)
   LIBRARY_NAME := $(notdir $(CWD)).lib
else
   LIBRARY_NAME := lib$(notdir $(CWD)).a
endif
endif

ifndef LIBRARY_ARCHIVE
   LIBRARY_ARCHIVE := $(OBJECT_DIR)/$(LIBRARY_NAME)
endif

###############################################################################
#
# Special targets
#

.PHONY: default
default: $(OBJECT_DIR) $(LIBRARY_ARCHIVE)

.PHONY: all
all: $(OBJECT_DIR) $(LIBRARY_OBJ) $(LIBRARY_ARCHIVE)

#
# Generate steps
#

.PHONY: generate generate_hook generate_real

generate: generate_hook generate_real

generate_real: $(addprefix generate.,$(CHILD_DIRS))


# To add a custom pre-clean step, add a clean_hook target to your makefile.
# To see an example, look at src/app/nano/lib/nmMScope/Makefile
#
#  .PHONEY: clean_hook
#  clean_hook: clean_gen

.PHONY: clean clean_hook clean_real

clean: clean_hook clean_real

clean_real: 
	-rm -rf $(OBJECT_DIR) 

.PHONY: clobber
clobber:
	-rm -f $(OBJECT_DIR)/.depend*

#############################################################################
#
# implicit rule for all .c files
#

.SUFFIXES: .c .C .cc .o .a .obj

$(OBJECT_DIR)/%.o: %.c
ifdef NM_VERBOSE_MAKEFILE
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	      -o $@ -c $<
else
	@echo $(CC) ... $(<F)
	@$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	       -o $@ -c $<
endif

$(OBJECT_DIR)/%.o: %.C
ifdef NM_VERBOSE_MAKEFILE
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	      -o $@ -c $<
else
	@echo $(CC) ... $(<F)
	@$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	       -o $@ -c $<
endif

$(OBJECT_DIR)/%.o: %.cc
ifdef NM_VERBOSE_MAKEFILE
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	      -o $@ -c $<
else
	@echo $(CC) ... $(<F)
	@$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	       -o $@ -c $<
endif

$(OBJECT_DIR)/%.obj: %.c
ifdef NM_VERBOSE_MAKEFILE
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	      /Fd"$(OBJECT_DIR)/" /Fp"$(OBJECT_DIR)/" /Fo"$@" /c $<
else
	@echo $(CC) ... $(<F)
	@$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	      /Fd"$(OBJECT_DIR)/" /Fp"$(OBJECT_DIR)/" /Fo"$@" /c $<
endif

$(OBJECT_DIR)/%.obj: %.C
ifdef NM_VERBOSE_MAKEFILE
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	      /Fd"$(OBJECT_DIR)/" /Fp"$(OBJECT_DIR)/" /Fo"$@" /c $<
else
	@echo $(CC) ... $(<F)
	@$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	      /Fd"$(OBJECT_DIR)/" /Fp"$(OBJECT_DIR)/" /Fo"$@" /c $<
endif

$(OBJECT_DIR)/%.obj: %.cc
ifdef NM_VERBOSE_MAKEFILE
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	      /Fd"$(OBJECT_DIR)/" /Fp"$(OBJECT_DIR)/" /Fo"$@" /c $<
else
	@echo $(CC) ... $(<F)
	@$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) \
	      /Fd"$(OBJECT_DIR)/" /Fp"$(OBJECT_DIR)/" /Fo"$@" /c $<
endif


$(LIBRARY_ARCHIVE): $(LIBRARY_OBJ)
ifdef NM_VERBOSE_MAKEFILE
	$(CC) -ar -WR,-u,-v -o $(LIBRARY_ARCHIVE) $(LIBRARY_OBJ)
else
	@echo $(CC) -ar -WR,-u,-v -o $(@F) ...
	@$(CC) -ar -WR,-u,-v -o $(LIBRARY_ARCHIVE) $(LIBRARY_OBJ)
#	@$(AR) ruv $(LIBRARY_ARCHIVE) $(LIBRARY_OBJ)
endif

ifneq ($(findstring clean,$(MAKECMDGOALS)),clean)
   ifneq ($(findstring clobber,$(MAKECMDGOALS)),clobber)
      ifneq ($(findstring generate,$(MAKECMDGOALS)),generate)
         include $(TOP_LEVEL_MAKE_DIR)/Makefile.depend
      endif
   endif
endif

