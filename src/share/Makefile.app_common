##############################################################################
#
# Typical stuff
#

CWD := $(shell $(PWD_COMMAND))

THIS_DIR := $(subst $(TOP_LEVEL_SRC_DIR),,$(CWD))

OBJECT_DIR := $(join $(TOP_LEVEL_OBJ_DIR)/$(HW_OS)$(OBJECT_DIR_SUFFIX),$(THIS_DIR))

DIR := $(shell test -d $(OBJECT_DIR) && echo "true")
ifneq ($(DIR),true)
   DUMMY := $(shell mkdir -p $(FULL_OBJECT_DIR))
   DUMMY += $(shell $(LINK) $(FULL_OBJECT_DIR)/ $(TOP_LEVEL_OBJ_DIR)/$(HW_OS)$(OBJECT_DIR_SUFFIX))
   DUMMY += $(shell mkdir -p $(OBJECT_DIR))
endif

###############################################################################
#
# Got more CFLAGS?
#

ifdef EXTRA_CFLAGS
   CFLAGS += $(EXTRA_CFLAGS)
endif

###############################################################################
#
# Specifics for a library
#

ifndef SRC_SUFFIXES
   SRC_SUFFIXES := .C .c .cc
endif

ifndef APP_SRC
   APP_SRC := $(foreach suffix,$(SRC_SUFFIXES),$(wildcard *$(suffix)))
   APP_SRC := $(filter-out $(EXCLUDE_SRC),$(APP_SRC))
endif

ifndef APP_OBJ
ifeq ($(HW_OS),pc_win32)
   APP_OBJ := $(addprefix $(OBJECT_DIR)/, \
                              $(addsuffix .obj,$(basename $(APP_SRC))))
else 
   APP_OBJ := $(addprefix $(OBJECT_DIR)/, \
                          $(addsuffix .o,$(strip $(basename $(APP_SRC)))))
endif
endif

ifndef APP_NAME
   APP_NAME := $(notdir $(CWD))
endif

ifndef APP_EXEC
   APP_EXEC := $(OBJECT_DIR)/$(APP_NAME)
endif

###############################################################################
#
# Special targets
#

.PHONY: default
default: $(OBJECT_DIR) $(APP_EXEC)

.PHONY: all
all: $(OBJECT_DIR) $(APP_OBJ) $(APP_EXEC)

.PHONY: clean
clean: 
	-rm -rf $(OBJECT_DIR) 

.PHONY: thisclean
thisclean:
	-rm -f $(OBJECT_DIR)/*

.PHONY: clobber
clobber: thisclean
	-rm -f $(OBJECT_DIR)/.depend*

#############################################################################
#
# implicit rule for all .c files
#

.SUFFIXES: .c .C .cc .o .a .obj

$(OBJECT_DIR):
	-mkdir -p $(FULL_OBJECT_DIR)
	$(LINK) $(FULL_OBJECT_DIR) $(TOP_LEVEL_OBJ_DIR)/$(HW_OS)$(OBJECT_DIR_SUFFIX)
	-mkdir -p $(OBJECT_DIR)

$(OBJECT_DIR)/%.o: %.c
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) -o $@ -c $<

$(OBJECT_DIR)/%.o: %.cc
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) -o $@ -c $<

$(OBJECT_DIR)/%.o: %.C
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) -o $@ -c $<

$(OBJECT_DIR)/%.obj: %.c
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) /Fo"$@" /c $<
# /Fd"$(OBJECT_DIR)" /Fp"$(OBJECT_DIR)"
$(OBJECT_DIR)/%.obj: %.C
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) /Fo"$@" /c $<

$(OBJECT_DIR)/%.obj: %.cc
	$(CC) $(CFLAGS) $(DEFINES) $(DEP_LIBS_INC) $(INCLUDE_FLAGS) /Fo"$@" /c $<

$(APP_EXEC): $(APP_OBJ)
	$(CC) $(CFLAGS) $(DEFINES) -o $@ $(APP_OBJ) $(DEP_LIBS_LD) $(LOAD_FLAGS) $(DEP_LIBS_LIB) $(LIBS)

ifneq ($(findstring clean,$(MAKECMDGOALS)),clean)
   ifneq ($(findstring clobber,$(MAKECMDGOALS)),clobber)
      include $(TOP_LEVEL_MAKE_DIR)/Makefile.depend
   endif
endif
