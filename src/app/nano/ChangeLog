2003-11-06  David Marshburn  <marshbur@cs.unc.edu>

	* interaction.h:  added a boolean variable printViewTransform
	* interaction.C (updateWorldFromRoom):  prints the view transform,
	if we're doing that.
	* microscape.C (class MicroscopeInitializationState):  added members
	for initializing the viewing transform.
	(parseArgs):  options for initializing and printing the view transform
	(Usage):  new args
	(main):  initialize the view transform

2003-11-05  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.C (main):  removed the color plane and colormap
	initialization from before the main loop to after the first pass
	through the main loop.

2003-11-04  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.C (main):  at the end of the main loop, added a call
	to center() if we've jumped to a time in a stream file and this is
	the first time through the loop.

2003-10-31  David Marshburn  <marshbur@cs.unc.edu>

	* nano.dsp:  removed the preprocessor directive THIRDTECH from
	the release build.

2003-10-23  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.h:  added a new global boolean variable 'usingJoystick'.
	* microscape.C:  test 'usingJoystick' instead of joyServer.  This lets
	us use a remote joystick in addition to a local one.  
	Also, removed some commented-out code.
	* minit.c (phantom_init):  set 'usingJoystick' if that's the case.
	(note that you need to remove NO_JOYSTICK_SERVER from the preprocessor
	definitions in nano.dsp for this to work)

2003-07-03  David Jack  <jackd@cs.unc.edu>
	* microscape.C (handle_screenImageFileName_change): Now checks to
	see if we're in workbench mode; if so, saves two images instead of
	one (one for each eye) using nmg_Graphics::createStereoScreenImages

2003-05-30  David Marshburn  <marshbur@cs.unc.edu>

	* nano.dsp:  link to Ghost40.lib

2003-05-20  David Jack <jackd@cs.unc.edu>
	* microscape.C (handle_tclwin_resize_change): Places 3D View window
	in a different place if we're in workbench mode

2003-03-31  Adam Seeger  <seeger@cs.unc.edu>

	* microscope.C (createNewDatasetOrMicroscope): added call to 
	sem_ui->clearImageBuffers to avoid dangling pointers when all the
	images get deleted

2003-02-24  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.C: took out unused argument in call to 
    nmui_AFM_SEM_CalibrationUI constructor

2003-02-07  David Borland <borland@cs.unc.edu>

        * import.C: added code for parsing .crv files.  The current spider
        object's curvature parameters will be set from this file.  Also fixed
        a couple of little bugs in updating each leg's rotation and 
        translation parameters when switching between legs.

2003-01-31  David Borland <borland@cs.unc.edu>

        * import.C: added code to hook up to the new translation and rotation
        sliders for individual spider legs.

2003-01-20  David Borland <borland@cs.unc.edu>

        * import.C: added code to hook up to the new curvature sliders for
        spider objects.

2003-01-17  Aron Helser  <helser@cs.unc.edu>

	* microscape.C: For no good reason I can see, getenv stopped
	working for Visual Protect env vars, but the MS version works. 
	*sigh*. 

2003-01-16  David Marshburn  <marshbur@cs.unc.edu>

	* nano.dsp:  undoes the commit of yesterday, which somehow (unknown)
	corrupted the files.

2003-01-15  Alexandra Bokinsky  <bokinsky@cs.unc.edu>

	* microscape.C (find_top_view_xforms): New button and function for
	setting view of surface to directly overhead
	Also added "-virus" command line arg to allow loading of NanoEd virus 
	menu and streamfiles

	* nm_MouseInteractor.C: Added support for Logitech haptic mouse, 
	turned on with #define in this file. 
	Also makes Measure Mode hand icon stay glued to surface. Tricky world-
	to-hand-to-tracker transforms. 
	
2003-01-13 Jameson Miller <millerj@cs.unc.edu>
	*microscope.c : added TCL variables and functions to handle adding 
         graphics to show haptic grid
	 *interaction.c : code for showing the haptic grid that
		is being sent to phantom.

2002-12-01 Jameson Miller <millerl@cs.unc.edu>
      *microscope.c : added TCL variables and functions to handle adding 
         graphics to show haptic plane
	 *interaction.c : display haptic graphics when pressing the phantom button
 			(and the option is selected.)

2002-11-06  Adam eeger@cs.c.edu>

	* microscape.C : added new user interface objects from nmr_RegistrationUI.C
	to viewRegister (since they're TclNetvars, they don't work otherwise!)

2002-10-24  David Borland  <borland@cs.unc.edu>

        * microscape.c : changed the name of the TEM image.

2002-10-10  Adam Seeger  <seeger@cs.unc.edu>

	* nm_Tip.C : added control to make the tip appear at the hand position 
	instead of the tip position

2002-10-09  Adam Seeger  <seeger@cs.unc.edu>

        * microscape.c (main): moved call to setTipRenderer outside the
        case for connecting to the SEM because it doesn't depend on there
        being an SEM connection

2002-10-08  Adam Seeger  <seeger@cs.unc.edu>

	* interaction.c (doFeelLive): added call to microscope->finishFreehand()
	which I plan to implement later (currently it doesn't do anything)
    * nm_Tip.C : fixed how z values for tip are acquired
   
2002-10-08 Jameson Miller <millerj@cs.unc.edu>
	* microscape.c : the -d file:filename command line 
	option was using wrong variable to get filename. Now
	it uses the correct one.

2002-10-02 David Borland <borland@cs.unc.edu>

        * microscape.c : added check around calls to World.Do to make
        sure we have a valid object.

2002-10-02 David Borland <borland@cs.unc.edu>

        * microscape.c : removed a couple of other references to the 
        URTexture Textures objects that is now obsolete.

2002-10-02 David Borland <borland@cs.unc.edu>

        * import.C : removed a reference to URTexture

        * microscape.C : same

2002-10-01 Jameson Miller <millerj@cs.unc.edu>
       *microscape.c - added handler functions that copy the values
          of TCL variables into nmb_decoration whenever they are 
          changed. (ie: handle_ds_red_ss_change)

2002-09-30  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c : added TclNetvar stuff for new registration controls

2002-09-28    <marshbur@cs.unc.edu>

	* CollaborationManager.C:  removed #include <tk.h> -- extraneous

2002-09-27  Adam Seeger  <seeger@cs.unc.edu>

	* minit.c: commented out #include x_util.h - not needed

2002-09-04  Adam Seeger  <seeger@cs.unc.edu>

	* nm_Tip.C (nm_TipRenderer::Render): fixed automatic texture coordinate
	generation and made this use the new URProjectiveTexture object
	* import.C : just name changes to match those in nmUGraphics
	* microscape.C : removed obsolete code for realign textures and
	pixelflow textures

2002-08-18  David Marshburn  <marshbur@cs.unc.edu>

	* vrpn_Tracker.cfg:  removed to the nano/etc directory
	* nano.bat & nanorelease.bat:  new
	* nano.dsp:  added the .bat files, and 

2002-08-15  Russ Taylor  <taylorr@cs.unc.edu>

	* microscape.c : Guarding Joystick stuff with #ifdef.  This is the
		last of it!
	* microscape.h : same.

2002-08-15  Russ Taylor  <taylorr@cs.unc.edu>

	* nano.dsp : Defined NO_JOYSTICK_SERVER in Debug code as well.

2002-08-15  Russ Taylor  <taylorr@cs.unc.edu>

	* nano.dsp : Defined NO_JOYSTICK_SERVER, which cuts out the code for
		the joystick.  This needs to be removed in order to compile
		in joystick support.

2002-08-15  Russ Taylor  <taylorr@cs.unc.edu>

	* microscape.c : Turned itself into microscape.C while I wasn't watching,
		so had to insert these patches by hand.  Added code to let the
		user interact using a DirecInput force-feedback joystick rather
		than a Phantom.  Opens a local server if the handTrackerName is
		Joystick* and a Phantom server if it is Phantom*.  For joystick,
		also modified the center code to set the lighting at 45 degrees
		and the surface parallel to the screen for better interaction.
		Includes an AnalogFly tracker built on top of the joystick.
		Includes code to use the buttons on the joystick to do most of
		the Magellan functions (no button corresponding to the Grab Mode
		button, since the finger trigger is numbered "1").  To make this
		code work, you need to compile VRPN to use DirectInput as
		described on the web page and then add VRPN_USE_DIRECTINPUT to
		the definitions for the nano project and add the following libraries
		to the link line: dxguid.lib dxerr8.lib dinput8.lib.  I'll put
		them in the external directory (as well as the needed include
		files).
	* microscape.h : same.
	* minit.c : same.

2002-08-13  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.C: added global nmui_AFM_SEM_CalibrationUI object
	* nm_Tip.C (buildDisplayList): makes sure it is in vlib context now

2002-08-09 Woojin Seok <seok@cs.unc.edu>

        *microscape.c (teardownSynchronization) (setupSyncronization) 
        : added variable of d_registrationColorMap2D to viewRegister 
        after fix a bug around colormap.

2002-08-05 Woojin Seok <seok@cs.unc.edu>

        * microscape.c <teardownSynchronization> : removed variables of 
        nmui_CrossSection class and nmr_Registration class.

2002-08-05 Woojin Seok <seok@cs.unc.edu>

        * microscape.c <setupSynchronization> : added variables of 
        nmui_CrossSection class to be collaborated.

2002-07-25 Woojin Seok <seok@cs.unc.edu>

        * microscape.C <setupSynchronization> : added variables of 
	nmr_RegistrationUI class to be collaborated.

2002-07-18 David Borland <borland@cs.unc.edu>

        * microscape.c : added client code for connecting to Gatan's 
        Digital Micrograph software for reading images from a CCD.  
        Still in rough form.  Will encapsulate it all better, but 
        putting it here for now for testing purposes.

        * import.C : added check for type of projective texture data
        in the call back for switching from surface to model mode

2002-07-18 Jameson Miller <millerj@cs.unc.edu>
	* interaction.c (h): tcl variables for handling displaying axes for
	direct step handled here.

2002-07-08  David Borland <borland@cs.unc.edu>
 
        * import.C : changed the projective texture mode callback so that
        it updates the enable texture button in the Registration UI.:wq

2002-07-08 David Borland <borland@cs.unc.edu>

        * import.C : fixed a bug that was causing spider object to be loaded
        as regular URPolygon objects.

2002-07-08 David Borland <borland@cs.unc.edu>
 
        * import.C : minor change to the callback that didn't get
        committed last time.

2002-07-08 David Borland <borland@cs.unc.edu>

        * import.C : added callback for projective texture coordinate 
        generation UI.  Moved here from the Registration UI.

2002-07-08 David Borland <borland@cs.unc.edu>

        * import.C : removed some debugging statements

2002-07-03 Jameson Miller <millerj@cs.unc.edu>
	*import.c : in function handle_import_rot_changed, now 
	sends the rotation of the axis object to direct step to set stepping axis.
	if we are setting the direct step axis.

2002-07-03  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.C : now passes aligner to the tipDisplayUI for alignment
	of SEM images to the AFM tip (in combined AFM/SEM)
  	* nm_Tip.[Ch] : added nmr_Registration_Proxy as data member and
	added button so user can enter the current tip location as a landmark;
	added a bunch of other Tcl variables to control the tip model;
	fixed enable/disable of texture and took out variables that were
	going to be used for loading the texture - we'll just use the 
	textures that are loaded in the graphics code
	(sendFiducial): new function to send the tip location to the aligner

2002-07-01  Aron Helser  <helser@cs.unc.edu>

	* microscape.C (handle_openStreamFilename_change): Set total
	length of stream in decoration object.
	Communicate name of stream file to tcl, so it can display in title
	bar. 
	(handle_openSPMDeviceName_change): clear name
	(openDefaultMicroscope): same

	* interaction.C (doLine): Set start and end of rubber line when
	initialized, to prevent weirdly placed lines. 

2002-07-01  David Borland <borland@cs.unc.edu>

	* import.C : minor changes to most of the functions to account
	for the reorganization of the UberGraphics class structure.
	
	* microscape.C : changed the URender object to a URTubeFile object
	for sending tubes to the AFM simulator.

2002-06-28  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.C: added initialization of a new global variable called
	tipDisplayUI of type nm_TipDisplayControls defined in nm_Tip.h
	* nm_Tip.[hC]: new file to define stuff for visualizing the AFM tip
	  display is now disabled by default. Tracking of tip location works

2002-06-26  Andrea Hilchey <hilchey@cs.unc.edu>

	* microscape.C : added variables and functions used in creating
	nmm_SimulatedMicroscope_Remote object, Eroder, used for erosion.
	also call to Eroder's mainloop in microscape's mainloop

2002--6-26  David Borland <borland@cs.unc.edu>

	* import.C : added callback for saving spider data

2002-06-24  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.C (initialize_environment):  restores NANO_ROOT.

2002-06-21 Charles Mason <mason@cs.unc.edu>
	
	* minit.c (handle_magellan_puck_change): fixed bug when
	translations room != head. No more "flying magellan."

2002-06-19 Jameson Miller <millerj@cs.unc.edu>
	* microscape.c - added autoscan into params
	for collaboration. cleaned up help printout
	when wrong command line argument is given.

2002-06-17  David Marshburn  <marshbur@cs.unc.edu>

	* nano.dsp:  remove vrpn_MousePhantom.[h,C]

2002-06-14  Aron Helser  <helser@cs.unc.edu>

	* nm_MouseInteractor.Ch: new, replaces
	vrpn_mousePhantom. mouseInteractor is now aware of what state the
	user is in, so it can perform context dependent actions with the
	mouse. 

	* microscape.Ch: Changes to support nm_MouseInteractor. Also allow
	fractional times when jumping in stream files, allows smaller time
	steps when making snapshots for movies. 
	* minit.ch: Changes to support nm_MouseInteractor
	* nano.dsp: same
	* vrpn_MousePhantom.Ch: removed

	* interaction.h: Includes for mouse interactor

2002-06-12 Jameson Miller <millerj@cs.unc.edu>
	* microscope.c: "working" message is now turned off
			when we load the same streamfile twice.

2002-06-06 Jameson Miller <millerj@cs.unc.edu>
	* interaction.c: added code to go into modify mode when in
		direct step (and commit button is pressed).
		modified functions :
			handle_commit_change
			handle_commit_cancel
			dofeellive :
			   restrictions on what the user can do with the phantom
			   once in xy_lock and in Direct Step mode.


2002-06-06 David Borland <borland@cs.unc.edu>

	* import.C: fixed a bug that was causing the wrong spider values to
	be set when switching between objects

2002-06-06 David Borland <borland@cs.unc.edu>

	* interaction.c: don't think the right version got in last time...

2002-06-06 David Borland <borland@cs.unc.edu>

	* import.C: just added and removed some debugging info

	* interaction.c: removed code for handling projective texture
	transformation.  It is handled by creating an UberGraphics object
	for the texture, and using the objects transform now.

2002-06-06 Woojin Seok <seok@cs.unc.edu>
	* microscape.C (teardownMicroscopeSynchronization): added
	m->state.doRelaxComp to share the state of button of "Offset Comp
	on" in modify parameter.

	(setupMicroscopeSynchronization) : added m->state.doRelaxComp
	 as same above.
	

2002-06-04 Jameson Miller <millerj@cs.unc.edu>
	* microscape.c: added direct step controls to collaboration.


2002-06-03 David Borland <borland@cs.unc.edu>

	* interaction.C: fixed a couple of minor bugs with UI for 
	controlling projective textures with the phantom.

2002-06-03 David Borland <borland@cs.unc.edu>

	* interaction.C (doWorldGrab): code for controlling projective 
	textures with the phantom.  There are still some problems (they 
	can only be transformed in object space), but it works okay for 
	the time being.

2002-06-02 Jameson Mller <millerj@cs.unc.edu>
	*interaction.C (.H) : new code for setting up plane force
	when feeling in directZ mode. new approach from previous commit.
	new function: set_directZ_plane_point - sets up a plane force
	about a point (facing up).

2002-05-28 David Borland <borland@cs.unc.edu>

	* interaction.C (doWorldGrab) : preliminary code for controlling
	projective texture transformations with the phantom.  Still needs 
	some work.

2002-05-28 David Borland <borland@cs.unc.edu>

	* import.C : a couple of the new tcl widgets weren't getting updated
	when switching between objects.  Fixed this.

2002-05-28 David Borland <borland@cs.unc.edu>

	* import.C : took out code for locking translations from here, and
	moved to interaction.C.  Locks for translations now only apply when
	"grabbing" an object.

	* interaction.C : same

2002-05-27 Jameson Miller <millerj@cs.unc.edu>
	*interaction.c : new code for detecting and dealing with case when
	the max set point is exceeded when feeling in directZ. new haptic mode
	DIRECT_Z_PLANE_MODE is now used when the setpoint has been exceeded.
	sets up plane force that is used.


2002-05-24 David Borland <borland@cs.unc.edu>

	* import.C : added code for locking the current projective texture 
	transform.  The projective texture can now be transformed while 
	keeping its old transform with respect to the object.

2002-05-23 David Borland <borland@cs.unc.edu>

	* import.C : added code for "fine-tuning" translations and rotations
	with the phantom.  When selected, translations and/or rotations are
	divided by ten.  Useful for fine-tuning object/projective texture 
	alignment.

	* interaction.C : same as above

2002-05-23 David Borland <borland@cs.unc.edu>

	* microscape.C : added a check for the existence of Ubergraphics Tree
	contents in openDefaultMicroscope

	* import.C : code for individual leg manipulation of spiders

	* interaction.C : took out a debugging print statement

2002-05-22 Jameson Miller <millerj@cs.unc.edu>
	* microscape.c: added in step_size to microscopesynchonization set up
		and tear down list.

2002-05-21 David Borland <borland@cs.unc.edu>

	* import.C : took out code for locking rotations from here

	* interaction.C : moved code for locking rotations here.  When 
	there are no locks, rotations are performed in world space.  When
	there are locks, rotations are performed in object space.  Hopefully
	this will help for aligning objects with projective textures.  Need
	to try it with a real phantom though.

2002-05-20 David Borland <borland@cs.unc.edu>

	* import.C : added user interface for controlling the number of
	spider legs

2002-05-20 David Borland <borland@cs.unc.edu>

	* import.C : added user interface for locking translations and 
	rotations

2002-05-20 David Borland <borland@cs.unc.edu>

	* import.C : previous changes to the object rotation code had the
	objects rotating around the incorrect axes.  Fixed this.

2002-05-16 Jameson Miller <millerj@cs.unc.edu>
	* MicroscopeHandlers.c (.h): Slow line mode can now collect data
	even when paused or can not collect data. This can be set by a toggle
	in the slow line live controls.
	* Microscape.c: added new tclNet var into setup for collaboration.


2002-05-13  David Marshburn  <marshbur@evans.cs.unc.edu>

	* microscape.c (handle_openStreamFilename_change):  for collaboration,
	if we're re-opening the same streamfile, don't generate an error.
	(handle_openSPMDeviceName_change):  same, for microscopes
	* interaction.c:  include URender.h instead of Urender.h (Note
	that, unlike the PC, the SGIs are case-sensitive).
	
2002-05-13  Andrea Hilchey <hilchey@cs.unc.edu>

	* import.C : changed handle_import_rot*_change functions (* is 
	x y or z) to send all rotation values from tcl boxes instead of
	just one associated with *

2002-05-13  Aron Helser  <helser@cs.unc.edu>

	* tcl_tk.c (init_Tk_control_panels): Prevent crash if interpreter
	creation fails. 

2002-05-08  David Borland  <borland@cs.unc.edu>

	* interaction.c (doWorldGrab):  removed a couple of warnings from
	the last commit

2002-05-08  David Borland  <borland@cs.unc.edu>

	* interaction.c (doWorldGrab):  changed rotations so objects are
	rotated in world space, not object space

2002-05-07  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c (setupSynchronization):  removed the static, stream
	and SPM device names from the synchronized variables.
	(handle_openStaticFilename_change):  fail if we are collaborating.
	(handle_openStreamFilename_change):  same.

2002-05-07  Andrea Hilchey <hilchey@cs.unc.edu>

	* import.C : changed parameters passed in to encode_and_sendRot
	function calls

2002-05-07  David Borland  <borland@cs.unc.edu>
	* microscape.C:
	(handle_openStaticFilename_change):  added code for automatically
	translating and scaling objects when a new static file is opened.
	This code had been previously committed, but it seems to have
	disappeared from the repository...

	(handle_z_dataset_change):  added code for automatically translating
	objects in z when switching between height planes.  Once again, this
	code was previously committed, but has disappeared...

2002-05-06  David Borland  <borland@cs.unc.edu>
	* import.C:  added callbacks for spider objects

	* interaction.C:  added code to doWorldGrab so that objects can
	be rotated and translated with the mouse phantom

2002-05-02  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c (main):  the vi curve initialization code now only
	asks for a log (stream) file name if we are actually connecting
	to a vi curve device.

2002-05-01  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c (handle_openSPMDeviceName_change):  catch attempts
	to open a microscope while we're collaborating (again).
	(main):  before opening a keithley device, make sure the user
	has specified a stream file.  This is in two places, where the
	microscope is initialized, and where the vi client is initialized.
	(ParseArgs):  if a log file is specified by -o on the command line,
	this now sets the tcl variable openSPMLogName so that a user isn't
	challenged again to name a log file.
	
2002-04-26  David Borland  <borland@cs.unc.edu>

	* microscape.C : made changes to change static file code for 
	loaded object.  Added change height plane code for objects

	* import.C : took out setting default translation of loaded 
	objects because this is done elsewhere now

2002-04-23  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c (createNewDatasetOrMicroscope):  set up microscope
	callbacks for the keithley, if we're using one.
	(main):  only set up microscope callbacks for the keithley if
	a microscope object has already been created.

2002-04-15  David Borland  <borland@cs.unc.edu>
	* import.C:  Fixed a couple of bugs introduced by my previous
	commit

2002-04-11  David Borland  <borland@cs.unc.edu>
	* import.C:  Changed default axis step value for loaded tubes.  
	Modified handling of opening and closing objects in the list of
	objects so that it is more intuitive.  Added functionality for 
	user control of sending orientation and scale updates to the AFM
	simulator

2002-04-04  Aron Helser  <helser@cs.unc.edu>

	* microscape.C (handle_set_stream_time_change): Display the
	"working" dialog for long or negative stream file jumps. 
	(handle_openStreamFilename_change): Display the "working" dialog
	when opening a stream file. 
	(workingMsg): new, displays dialog
	(doneWorkingMsg): new, closes dialog, may be called multiple
	times, even if dialog isn't open. 

2002-04-03  David Borland  <borland@cs.unc.edu>
	* import.C: Added ability to close loaded object files

2002-04-02  David Borland  <borland@cs.unc.edu>
	* import.C: Added automatic sending of tube translation and
	rotation to AFM simulator

2002-04-01  Aron Helser  <helser@cs.unc.edu>

	* microscape.C (handle_viz_dataset_change): Change the order of
	operations so the viz plane is rebuilt correctly. 
	(setup_region): same
	(handle_viz_change): same, use plane->minNonZeroValue(). 
	(createNewDatasetOrMicroscope): Clear flag, region is gone. 

2002-03-27  David Borland  <borland@cs.unc.edu>
	* import.C:  added callback for allowing the user to select
	every nth point along the axis line when loading a tube--should
	make for better performance on the AFM simulator side

2002-03-22  David Marshburn  <marshbur@evans.cs.unc.edu>

	* index_mode.C:  changed a couple of places where the string
	class is used so this will build on the SGI.

	* microscape.C (loadProcProgNames, loadPPMTextures):  changed 
	vc_[open,read]dir to [open,read]dir

2002-03-20  Aron Helser  <helser@cs.unc.edu>

	* microscape.C (handle_show_help_flag): new, show user_manual
	index.html when help menu is activated. 
	Handle replacement BCString -> string
	* microscopeHandlers.C: Handle replacement BCString -> string
	* nano.dsp: Changes to vrpn, vlib, Release config now builds. 

2002-03-20  David Marshburn  <marshbur@cs.unc.edu>

	* CollaborationManager.C:  loop variable change

2002-03-19  David Marshburn  <marshbur@evans.cs.unc.edu>

	* microscape.C (main): removed a print statement that was
	causing problems.
	* CollaborationManager.C:  loop variable change
	* vrml.C:  compiler pragma warnings in std. library include
	files.  warnings reset after include statements.
	* microscape.h:  same
	* index_mode.C:  same
	* imported_obj.h:  same

2002-03-15  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c (setupSynchronization):  comment changes
	* nano.dsp:  links with vogl and quat in their new locations

2002-03-13  Aron Helser  <helser@cs.unc.edu>

	* imported_obj.h: Change to standard iostream/STL headers. 
	* index_mode.C: same
	* microscape.h: same
	* vrml.C: same
	* nano.dsp: same, stop including ghost-stl. 
	* nano_unc.ico: Reduced to 16 colors, fixed memory error when glut
	loaded 24bit color icon. 

2002-03-13  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c:  adds comments for using APP_SUFFIX
	* nano.dsp:  link with Debug-located quat and vogl rather than
	(redundant) *_MDd-located libs.

2002-03-11  Aron Helser  <helser@cs.unc.edu>

	* microscape.c (handle_z_dataset_change): Removal of unnecessary
	causeGridRebuild commands 
	(handle_markers_shown_change): same
	(handle_color_dataset_change): same
	(createNewDatasetOrMicroscope): clean up green scanline indicator
	(main): -perf shows framerate averaged over 10 frames. 

	* interaction.c: Comment changes

2002-03-06  David Borland <borland@cs.unc.edu>

	* import.C : Added a callback for user controll of the amount
	of tesselation of loaded tubes

	* microscape.C : Changed name of function that automatically scales
	objects when new static files are loaded

2002-02-27  David Marshburn  <marshbur@cs.unc.edu>

	* CollaborationManager.C (getPeer, getServer):  for completeness,
	save both incoming and outgoing logs on both connections.
	* nano.dsp:  remove an extra vrpn_phantom.lib from the external-
	libraries list.
	
2002-02-25 Andrea Hilchey <hilchey@cs.unc.edu>

	* microscape.C : deleted call to encode_and_sendScanandGridInfo
	(moved into nmm_SimulatedMicroscope_Remote)

2002-02-21  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c 
	(setupSynchronization):  Changed to only do non-microscope variables.
	Also added z_lock to the shared variables.
	(teardownSynchroniztion):  same.
	(setupMicroscopeSynchronization):  new
	(teardownMicroscopeSynchronization):  new

2002-02-18  David Borland <borland@cs.unc.edu>

	* microscape.c : Added code so that objects are scaled accordingly
	when new static files are loaded

	* import.C : TCL stuff for projective textures onto loaded objects

	* imported_obj.C : same
	
2002-02-15  Aron Helser  <helser@cs.unc.edu>

	* microscape.c (createNewDatasetOrMicroscope): Changed so it
	doesn't create a microscope object when reading static files. All
	other changes were required by this lack of a microscope
	object. Several confused dependencies were cleared up. 

	(handle_z_dataset_change): moved here , doesn't depend on
	microscope object.
	(stm_z_scale): same
	(handle_z_scale_change): same
	(MicroscapeInitializationState): Added ReadMode method.
	(setupCallbacks): Moved some contents to handle null microscope. 
	(teardownCallbacks): same
	Changes to handle move of ReadMode() into nmb_Dataset.

	* microscopeHandlers.C (handle_z_scale_change): removed.
	(stm_z_scale): removed.
	(handle_z_dataset_change): removed
	
	* interaction.c: Added check for null microscope object, in
	several functions. handle move of ReadMode() into nmb_Dataset.
	* minit.c: handle move of ReadMode() into nmb_Dataset.
	
2002-02-08  Aron Helser  <helser@cs.unc.edu>

	* Makefile (USES_EXTERNAL_LIBS): Add shell32 to support microscape.c

	* microscape.c (initialize_environment): Changes to check for
	copy-protection using Visual Protect, and automatically minimize
	console window if app created it. 

2002-02-05  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c (handle_set_stream_time_change):  if reading a vi
	curve stream, and if jumping back in time, reset the keithley UI.

2002-01-31  David Marshburn  <marshbur@cs.unc.edu>

	* nano.dsp:  builds with non-static run-time libraries.
	* error_display.[h,C]:  moved to tclLinkVar, to be used by other apps

2002-01-21  David Marshburn   <marshbur@cs.unc.edu>

	* CollaborationManager.C (setPeerName):  remove compiler warning

2002-01-15  Andrea Hilchey <hilchey@cs.unc.edu>

	* microscape.c : added nmm_SimulatedMicroscope_Remote setup and call to
	mainloop in main and fixed simscanplanename so that actually retains 
	the name it is given in the tcl window

2002-01-15  David Marshburn  <marshbur@cs.unc.edu>

	* CollaborationManager.C (setPeerName):  force local and remote 
	hostnames to lowercase before determining who the synchronizer is.
	Added some debugging output.

2002-01-11  Aron Helser  <helser@cs.unc.edu>

	* tcl_tk.c (init_Tk_control_panels): Fixed variable bug, added
	THIRDTECH ifdef

2002-01-07  Aron Helser  <helser@cs.unc.edu>

	* microscape.c (initialize_environment): Eliminate the need for
	the NANO_ROOT environment variable, by looking up the directory
	where the executable is run from. 

2002-01-04  Aron Helser  <helser@cs.unc.edu>

	* interaction.c (xs_state): new structure, for two cross sections.  
	(xs_find_full_width): new, calculates full width of surface. 
	(doCrossSection): changed to handle full width, 2 cross sections,
	reset, dynamic update. 

2001-12-20  David Marshburn  <marshbur@cs.unc.edu>

	* nano.dsp:  removed references to ImgFormat

2001-12-19  David Marshburn  <marshbur@evans.cs.unc.edu>

	* Makefile:  remove ImgFormat from USES_LIBS list
	* microscape.c (handle_screenImageFileName_change): updated
	call to createScreenImage
	* index_mode.C: remove references to ImgFormat package

2001-12-18  Aron Helser  <helser@cs.unc.edu>

	* interaction.c (doCrossSection): new phantom mode, place and move
	the cross section, notify graphics and nmUI as it changes. 
	(dispatch_event): handle doCrossSection

2001-12-18  David Marshburn  <marshbur@evans.cs.unc.edu>

	* CollaborationManager.C:  removed compiler warnings on the SGI, 
	removed commented-out code, some code-clean up
	* collaboration.C: same
	* import.C: same
	* index_mode.C: same
	* microscape.c: same
	* vrml.C: same
	* vrpn_MousePhantom.C: same

2001-12-12  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c (handle_rewind_stream_change): tell the keithley
	ui to rewind as well.

2001-12-11  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c (default_spring_k):  changed the default
	value to 0.35, so that the Phantom doesn't resonate on the 
	edges of the scan area.

2001-12-10  David Marshburn  <marshbur@cs.unc.edu>

	* CollaborationManager.C (initialize):  small change to 
	isLoggingInterface call

2001-12-10  David Marshburn  <marshbur@cs.unc.edu>

	* CollaborationManager.h
	(setLogging): additional argument for interface port number
	(d_interfaceLogPort):  additional parameter for interface logging

	* CollaborationManager.C
	(setLogging):  additional argument
	(initialize):  correctly name and open private log file
	
	* microscape.c (main):  pass additional arg to setLogging

	* nano.dsp:  changed the default output executable to be nano.exe
	instead of nanoDebug.exe, for ease of use.

2001-12-06 Jameson Miller <millerj@cs.unc.edu>
	*interaction.c : backed out of previous changes. setGridSize is 
	no longer called after setting the region size.



2001-12-05  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (main): moved init_Tk_control_panels() so its called 
	before openDefaultMicroscope()

2001-12-04  Andrea Hilchey  <hilchey@evans.cs.unc.edu>

	* microscape.c : additional paramter to call to 
	shape_analysis.imageAnalyze

2001-11-30  Adam Seeger  <seeger@cs.unc.edu>

	* x_graph.c : replaced get_the_interpreter() with 
	Tcl_Interpreter::getInterpreter()

2001-11-29  Adam Seeger  <seeger@cs.unc.edu>

	* CollaborationManager.C : replaced get_the_interpreter() with
				   Tcl_Interpreter::getInterpreter()
	* error_display.c : same
	* microscape.c : same
	* tcl_tk.c : moved generic code out of this into Tcl_Interpreter.C

2001-11-27  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (main): took out parameter in call to 
	colormap constructor

2001-11-26  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (disableOtherTextures): removed this function - a tcl
	callback that does something similar was put in mainwin.tcl to 
	take its place
	(alignmentTextureDisplay): created a new object for displaying the 
	alignment texture

2001-11-25  Aron Helser  <helser@cs.unc.edu>

	* microscape.c (handle_tclwin_resize_change): new. Changes size
	and position of Surface View window based on size of tcl windows. 

2001-18-09 Jameson Miller <millerj@cs.unc.edu>
	* interaction.c: when setting the region, SetGridSize is called so
	that Topo sets the grid size correctly. This is so direct step
	takes the correct step size after changing the scan region.

2001-11-09  David Marshburn  <marshbur@cs.unc.edu>

	* interaction.c (doFeelLive): ResumeScan change to
	ResumeWindowScan avoids sending image mode params twice. 

2001-11-09  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c: some formatting around vi curve code
	(handle_rewind_stream_change): reset the keithley interface
	when the stream is rewound.

2001-11-03  Jameson Miller  <millerj@cs.unc.edu>
	* interaction.c - changed the position repoerted to the direct 
	step window to be the acutal position reported of the 
	microscope, instead of the position of the graphic on screen.

2001-10-31  Yoni Fridman  <fridman@cs.unc.edu>

	* microscape.c (handle_analyze_shape): Removed the second calling
	parameter to shape_analysis.imageAnalyze

2001-10-19  Aron Helser  <helser@cs.unc.edu>

	* interaction.c (handle_commit_change): Changed direct call to
	position_sphere in graphics library (which shouldn't have linked!)
	to graphics->positionSphere

2001-10-15  Aron Helser  <helser@cs.unc.edu>

	* microscape.c (handle_friction_slider_change): remove call to
	obsolete graphics method.
	(handle_bump_slider_change): same
	(handle_buzz_slider_change):same
	(handle_compliance_slider_change):same
	(handle_alpha_dataset_change):same
	(handle_adhesion_dataset_change):same
	(handle_friction_dataset_change):same
	(handle_bump_dataset_change):same
	(handle_buzz_dataset_change):same
	(handle_compliance_dataset_change):same

2001-10-12  Nathan Conrad  <conrad@cs.unc.edu>

	* nano.rc: Added an #ifdef statement to determine which icon should
	be compiled into the nano binary. nano_3rd.ico and nano_unc.ico are
	the two icon files.

2001-10-12  Aron Helser  <helser@cs.unc.edu>

	* microscape.c: Get rid of remnants of min/max color in favor of
	surface color

2001-10-02  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c: code clean-up in the handle_mutex* functions.

2001-09-30  David Marshburn  <marshbur@cs.unc.edu>

	* minit.c: (handle_magellan_button_change) handle both
	xy_lock and z_lock with the same Magellan button.  Toggles
	among x'y'z'-lock, xyz'-lock, x'y'z-lock and xyz-lock.

	* butt_mode.h, .c: added Z_LOCK_BT

	* interaction.c: added TclNet_int z_lock
	(handle_zLock): new, handles z_lock toggle
	(handle_xyLock): changed to accomodate z_lock
	(interaction): handle Z_LOCK_BT
	(doFeelLive):  restrict tip motion for z_lock

	* interaction.h: added extern TclNet_int z_lock

2001-09-25 Jameson Miller <millerj@cs.unc.edu>
	* interaction.c - the z positon gets updated when in xy-lock and
	taking steps in direct_step using feedback. this is so that when 
	you switch to taking steps in directZ, the correct position of the
	microscope is represented by the sphere on the screen


2001-09-25  David Marshburn  <marshbur@cs.unc.edu>

	* interaction.c: (all) code clean up.  removal of commented out
	code, old print statements, some formatting
	(doMeasureGridGrab) removed.  unused and unimplemented.  Associated
	with unused USER_MEAS_MOVE_MODE.
	(doLine): major reformatting.
	(doFeelLive): make xy lock not lock z when in directz control.

	* microscape.c: build clean-up

2001-09-17  David Marshburn  <marshbur@cs.unc.edu>

	* interaction.c: removed ^M's and commented-out print functions.  

2001-09-14 <millerj@cs.unc.edu>
	* interaction.c, .h : added direct step capability. Display will get 
	updated when steps are taken in xy__lock, when selecting xy_lock, 
	the z_position of the microscope gets set so direct stepping in xyz 
	works. added in an variable so that the z position of microscope
	is remembered.

2001-08-28    <dwyer@BISMUTH-CS>

	* microscape.c (handle_guardedscan_planeacquire): Fixed string problem.

2001-08-23    <dwyer@BISMUTH-CS>

	* microscape.c (handle_guardedscan_planeacquire): Added 
	channel/direction selector for guardedscan (uses current heightplane)

2001-08-21  Aron Helser  <helser@cs.unc.edu>

	* interaction.c (region_drag_mode): default to REG_DEL so surface
	stays at full res and region not created til user clicks. 

	* microscape.c (handle_open*_change): remove some annoying
	printouts. 

2001-08-20  Adam Seeger  <seeger@cs.unc.edu>

	* interaction.c : added max and min macros so this will compile on PC
	* Makefile: added nmMP dependency through nmb_Device

2000-12-05  Russ Taylor  <taylorr@cs.unc.edu>

	* interaction.c : Check to see if the "autoscan" feature is turned
		on before resuming scan after lines, freedhand modifications,
		etc.
	* microscape.c : Same for x-window touching.

2000-12-05  Russ Taylor  <taylorr@cs.unc.edu>

	* interaction.c (specify_directZ_force) :
		Make it specify a zero force, rather than doing nothing,
		when it has no good information to display.  Removed print
		statements.
		(doFeelLive) : Puts the microscope back into image mode when
		leaving feel modes, so that relaxation compensation can do
		the right thing, and the background color does the right thing.

2001-08-10 Jameson Miller <millerj@cs.unc.edu>

	* interaction.c: changed so that the sphere can be positioned 
	properly with new changes in optimize_now. 

2001-08-10  David Marshburn  <marshbur@evans.cs.unc.edu>

	* microscape.c: (setupSynchronization, teardownSynchronization)
	added image param tcl_net_vars

2001-08-06  Brian Boyd  <boydb@cs.unc.edu>

	* microscape.c (main): changed initialization of index mode so that 
	static files can be indexed. for indexing of static files, nano exits 
	after the first time through mainloop.

	* index_mode.C (newPlane): changed it so that colorplane in dataset 
	and graphics is set the new heightplane.
	(snapshot): added checks for initialization of dataset and decoration,
	changed filename to be elapsed time in stream, added code (copied from 
	microscape.c) to pop the graphics window to front, set the colormap 
	and colorplane before creating screen image
	(handle_new_datapoint): added checks to ignore the first image

	* index_mode.h: added the variables prev_time and first_scan and removed
	snapshots_taken
	
2001-08-06  Nathan Conrad  <conrad@cs.unc.edu>

	* tcl_tk.c (init_Tk_control_panels): changed the
	'my_tk_control_interp->result' in each TCL error message to
	'Tcl_GetStringResult(my_tk_control_interp). This causes nano to output
	usefull error messages when there is an error in the TCL code.

2001-08-05    <marshbur@cs.unc.edu>

	* microscape.c: added m->state.modify.new_tool to setup/
	teardownSynchronization

2001-08-02  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c (createNewMicroscope): removed hostname argument
	from nmb_Dataset constructor.

	* Makefile: removed references to nmRobotControl and nmTipConvolution.
	* microscape.c: removed TipConvolution code.  removed RobotControl code.

2001-08-02  Aron Helser  <helser@cs.unc.edu>

	* tcl_tk.c (init_Tk_control_panels): BLT must be statically
	initialized with tcl/tk 8.3 for nano to run. Move #ifdef NO_ITCL
	so this happens. 

2001-08-01  Aron Helser  <helser@cs.unc.edu>

	* interaction.c (regionOutsidePlane): new.
	(doRegion): call regionOutsidePlane and delete region if user
	drags/creates it outside of plane. 

	* minit.c (handle_magellan_button_change): Scale up/down
	consolidated to just "scale".

	* Makefile: few more excluded files for VC
	
2001-07-30  Aron Helser  <helser@cs.unc.edu>

	* interaction.c (doRegion): Changes highlight param sent to
	graphics, allows graphics to know when user has let go of phantom
	button.

2001-07-29  David Marshburn  <marshbur@evans.cs.unc.edu>

	* microscape.c:  include RobotControl.h only if building 
	with NANO_WITH_ROBOT.
	* Makefile:  USES_LIBS includes nmRobotControl only iff
	building with NANO_WITH_ROBOT

2001-07-27  Aron Helser  <helser@cs.unc.edu>


	* CollaborationManager.C: VRPN streamfiles should always begin
	"file://" so they form proper URLs with WinNT network
	directories. 
	* microscape.c (main): same. Fix initMagick ->
	nmb_ImgMagick::initMagick. 

2001-07-26  Aron Helser  <helser@cs.unc.edu>

	* microscape.c: Moved many tclvars related to colormaps into
	nmui_Colormap, changed comments.
	(handle_color_minmax_change): callback into nmui_ColorMap now
	(handle_surface_color_change): callback into nmui_ColorMap now
	(handle_texture_conversion_map_change): used for registration
	tool's colormap.
	(handle_openStaticFilename_change): reflects nmb_Dataset changes
	to put mismatch images into ImageList, instead of throw out.
	(handle_screenImageFileName_change): handle new formats from
	ImageMagick.
	(loadColorMapNames): moved to nmui_ColorMap
	(main): initMagick, new nmui_ColorMap 

	* microscape.h: removed curColorMap, tcl globals - use
	nmui_ColorMap instead.

	* microscopeHandlers.C (handle_z_dataset_change): Fix of screw-up with
	initialization of the height plane widget. 

	* tcl_tk.ch (makeColorMapImage): moved to nmui_ColorMap
	(tcl_colormapRedraw): same

	* vrml.C: fixed warning

	* Makefile: Ghost 3.1
	
2001-07-24  David Marshburn  <marshbur@tungsten-cs.cs.unc.edu>

	* microscape.c (setupSynchronization): changed the call to the
	PlaneSync constuctor to match its new interface.

2001-07-09  Shayne O'Neill  <soneill@mindspring.com>

	* microscape.c:  Added calls to Graphmod's setup and teardown
			 synchronization in SetupSynchronization()
			 and TeardownSynchronization().  Also changed
			 the creatioin of a graphmod in CreateNewMicroscope()
			 to accurately reflect the change to MicroscopeRemote.
	
2001-07-06 Jameson Miller <millerj@cs.unc.edu>
	* microscape.c - registered a new pointdatahandler so dataset will be u
	updated when in optimize now mode and new points are recieved
	* interaction.c - cleaned up and debugged interface for optimize_now 
	mode. 
	* minit.c - commented out explicit call for handle_commit_change
	for TCL_COMMIT when commit or cancel button pressed on 
	magellan

2001-06-27  David Marshburn  <marshbur@tungsten-cs.cs.unc.edu>

	* Makefile:  removed collaboration.C from the list of ignored files
	* collaboration.C:  moved all of the collaboration functions
	from microscape.c to here.  Changes also fix a collaborative timing
	bug that copied streamfile time between private and shared state.
	Removed some print statement, tidied comments, etc.
	* collaboration.h:  declarations of functions in collaboration.C
	* microscape.h:  added a few new global variables that 
	collaboration.C needs. (set_stream_time, set_stream_time_now,
	share_sync_state, measure[Red,Green,Blue][X,Y]).  Added two 
	functions needed by collaboration.C (updateRulergird[Offset,Angle]).
	Reformatted some TclVar declarations.
	* microscape.c:  removed collaborative functions and variables
	over to collaboration.C

2001-06-25  Shayne O'Neill  <oneill@mindspring.com>

	* microscape.c:  Changed a bunch of Tclvars to TclNets.
			 Changed variables related to:
			    Display Settings (Bug 2.7.4)
			    Haptics (Bug 2.7.2)
			    External Filters (Bug 2.7.3) 
			    xyLock (Bug 2.4.1)
			 Added these variables to setupSynchronization(),
			 teardownSynchronization(), and shutdown_connections().
	* microscape.h:  Changed some Tclvars to TclNets.
			 Made some TclNets external.
	* interaction.c: Changed some Tclvars to TclNets.
	* interaction.h: Changed some Tclvars to TclNets.

2001-06-25  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c:  removed g_syncPending variable and 
	sync_plane_struct, both unused.

2001-06-21  Aron Helser  <helser@cs.unc.edu>

	* microscape.c: Numerous spacing, comment and re-ordering changes,
	to organize Tclvars and their handlers into groups. 
	(handle_withdraw_tip_change): moved to microscopeHandlers.C
	(handle_openStreamFilename_change): Change file:%s
	to file://%s so it's always a proper URL. Fixes bug with stream
	files on network drives. 
	* microscopeHandlers.C (handle_withdraw_tip_change): added.
	(setupStateCallbacks): added handle_withdraw_tip_change.
	(teardownStateCallbacks): same

2001-06-18  Andrea Hilchey <hilchey@cs.unc.edu>

	* microscape.c: changed handle_analyze_shape function so that
		call to imageAnalyze() now takes the new parameter of 
		type nmb_Dataset * that it now needs (due to changes in
		nma_ShapeAnalysis)
	
2001-06-18  David Marshburn  <marshbur@cs.unc.edu>

	* microscape.c:  dead code removal.  Got rid of copy_inactive_state
	and its attendant callback, handle_timed_sync.

2001-06-17  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c : Make bdboxName, headTrackerName, handTrackerName
	static.
	Make InitializationState::index_mode vrpn_bool instead of bool
	for consistency.
	(main) : change parameters to peripheral_init(), use vrpn_bool
	instead of bool.
	(ParseArgs) : change index_mode to vrpn_bool instead of bool.
	Add accidentally-lost line for -renderclient.
	* microscape.h : Remove bdboxName, headTrackerName, handTrackerName.
	* minit.c (teardown_phantom) : new function.
	(phantom_init) : add new parameter(s) to reduce reliance on globals.
	(peripheral_init) : same.
	* minit.h : declare teardown_phantom and phantom_init,
	change parameters to peripheral_init, add lots of comments.

	* interaction.c : reorder #includes, fix brackets.
	* microscape.c : same.
	* minit.c : same.
	* vrpn_MousePhantom.C : same.

	* interaction.h : expose (extern) Tclvars for microscape.c
	* microscape.c : add MicroscapeInitializationState::laUseUDP, laUseQM,
	laQMT, laQMD, laUseWPA, laUseFA, laFaN, laFaD
	Add much code that doesn't work, leaving it inside #if 0 for now.
	(MicroscapeInitializationState constructor) : initialize new
	variables.
	(ParseArgs) : parse new command-line arguments.
	(Usage) : document new command-line arguments, remove documentation
	of obsolete arguments.
	(main) : respond to new command-line arguments.

	* microscape.c (createForwarders) : remove old code.
	* microscape.h : remove things that shouldn't be shared.
	
2001-06-08  Aron Helser  <helser@cs.unc.edu>

	* microscopeHandlers.Ch (handle_color_dataset_change): remove
	(handle_sound_dataset_change): remove - they don't use the microscope. 
	
	* microscape.c (handle_color_dataset_change): add
	(handle_sound_dataset_change): add
	(setupCallbacks): New members, re-organize.
	(teardownCallbacks): same. 
	
2001-06-05  David Marshburn  <marshbur@cs.unc.edu>

	* CollaborationManager.C:  changes to accomodate new PlaneSync.
	* microscape.c:  changes to use new calculated plane types.

2001-06-01  Aron Helser  <helser@cs.unc.edu>

	* microscape.c (initialize_environment): Hostname initialization
	(handle_openStreamFilename_change): Stuff moved from one-time init
	to everytime. 
	(handle_openSPMDeviceName_change): same
	(main): Re-order initialization so simple, default microscope is
	created first, then tcl/tk is initialized, then complicated,
	error-prone microscope init happens - error dialogs can be
	displayed if needed. 

2001-05-31  Aron Helser  <helser@cs.unc.edu>

	* tcl_tk.c (init_Tk_control_panels): Tell tcl script what
	directory it lives directly, instead of with environment. 

	* minit.c (handle_magellan_button_change): Grab button has
	quasi-mode when held, turning on scale mode. 

	* microscape.c: move of inputPlaneNames to nmb_Dataset, several
	places.
	(frame_rate): new tclvar to show frame rate. Use "-perf" arg. 
	(ParseArgs): fixed logic bugs if too many files on cmd line

	* interaction.c (doScale): New use method. Click defines center of
	scale, in-out drag defines scale. 

	* Makefile (APP_SUFFIX): new define so app and tcl directory can
	have extension. Allows multiple versions to exist in same
	directory structure. 

2001-05-18  Jason Clark  <jclark@cs.unc.edu>

	* microscape.c (setup_region): Use new terminology for
	surface-regions.

2001-05-15  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (main): moved call of
	microscope->EnableUpdatableQueue() to nmm_MicroscopeRemote.Cdef so
	that this gets called at a more appropriate place (when
	connection is actually made to the microscope)

2001-05-12  Aron Helser  <helser@cs.unc.edu>

	* microscape.c (handle_local_viewer_change): Send command to
	graphics to choose infinite/local viewer.
	(local_viewer) : new TclNet_int.
	(set_stream_time): Should be int until we handle correctly in
	callback.

	VIEWER changed to NO_MSCOPE_CONNECTION or NO_PHANTOM

	(handle_exportPlaneName_change): Set exportFileType correctly.
	(initialize_environment): Calculate Surface view window size from
	screen size
	
	* minit.c: comment out magellanPuckAnalog, since it's not
	used. Might be useful in the future.
	VIEWER changed to NO_MSCOPE_CONNECTION or NO_PHANTOM

	* tcl_tk.C: VIEWER changed to NO_MSCOPE_CONNECTION or NO_PHANTOM
	
	* Makefile : Flags to selectively allow compilation without
	phantom or without microscope connections.

2001-05-12  Jason Clark  <jclark@cs.unc.edu>

	* microscape.c: Switch the example visualization methods over to
	the new surface-region approach.

	Minor modification to the visualization methods to demonstrate
	something.

2001-05-11  Aron Helser  <helser@cs.unc.edu>

	* interaction.c (doSelect): Allow grab and translate of center of
	region, dragging of edges.
	(doRegion): new user mode, specify rectangular, rotatable
	region. Useful for nmg_Visualization, region of interest. Doesn't
	do anything yet. 
	(dispatch_event): Incorporate new mode, USER_REGION_MODE. 
	(handle_commit_change): Select icon changes
	(handle_commit_cancel): Select icon reverts to whole scan region.
	
	* minit.c (handle_magellan_button_change): Add USER_REGION_MODE to
	button 6.
	(handle_magellan_puck_change): Allow surface movement in SELECT,
	REGION modes. 

2001-05-07  Jason Clark  <jclark@cs.unc.edu>

	* microscape.c: Put code back in that somehow got obliterated

2001-04-30  Tom Hudson  <hudsoncs.unc.edu>

	* CollaborationManager.C (fullyConnected) : PC insists on a
	return value.

2001-04-30  Tom Hudson  <hudsoncs.unc.edu>

	* CollaborationManager.C (fullyConnected) : Test to see if we're
	already connected so we don't display the "got connected" message
	and call subsequent handlers twice.  Hack, but should work as long
	as we're not supporting disconnection and reconnection or as long
	as that facility is PROPERLY implemented.

2001-04-30  Tom Hudson  <hudsoncs.unc.edu>

	* microscape.c (main) : Add call to requestMutex() to try to
	get Tcl displays correctly set.
	* minit.c (connect_Magellan) : Add new parameter to constructor
	of vrpn_Tracker_AnalogFly to avoid collaborative head-butting
	where one Magellan idle in "*" fly mode doesn't allow the other
	collaborator to use Magellan or Phantom to grab the surface at all.

2001-04-30  Jason Clark  <jclark@cs.unc.edu>

	* import.C: Moved header file info into here to be consistent with
	only putting info in the headers that need to be accessed by other
	libraries.

2001-04-24  Adam Seeger  <seeger@cs.unc.edu>

	* CollaborationManager.C (setPeerName) : if you run both 
		collaborators on the same machine this would not
		work right because it used the machine name 
		to select which of the collaborators would be
		in charge of synchronization and with both machine names
		equal, no one got to be in charge. Now, if you do this, this
		checks to see if the machine names are equal and if they are
		it uses the server port number to decide who is in charge of
		synchronization

2001-04-24  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c: added -peerbaseport argument to let you run two 
		collaborating copies of nano on the same machine (you might 
		want to do that for testing)
 	* index_mode.Ch (isInitialized): new function to check whether 
		index mode is active
	* microscopeHandlers.C (handle_z_dataset_change) : checks whether 
		index mode is active before telling it there is a new plane
	* interaction.c : uncomments some informative print statements for when
		collaboration mutex is restricting control of microscope

2001-04-17  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c: changed usage of vrpn_get_connection_by_name so it
	is by default compatible with vrpn 6 and if VRPN_5 is #defined then
	it should be compatible with vrpn 5 

2001-04-17  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (shutdown_connections) : added delete of sem_connection
	made logFile manipulations (reset, set time...) mostly uniform among
	afm, ohmmeter, vicurve, and sem
	changed usage of vrpn_get_connection_by_name so it correctly sets
	the logging mode 

2001-04-17  Adam Seeger  <seeger@cs.unc.edu>
	
	* microscape.c (register_vrpn_callbacks) : added hard-coded 
	room from head tracker transform for workbench (Phillips 101 setup) only

2001-04-17  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c (handle_openSPMDeviceName_change) : turn off
	vrpn_System_TextPrinter error messages for
	microscopeRedundancyController.
	(main) : same.

2001-03-23  Jason Clark  <jclark@cs.unc.edu>

	* microscopeHandlers.C (handle_z_scale_change): Don't call
	causeGridRebuild, call causeGridRedraw.  I had changed it to that
	before, but I fixed the visualization code so that it is back to
	not being necessary anymore.  So go with the faster causeGridRedraw.

	* microscape.c (handle_viz_change): chooseVisualization doesn't
	automatically rebuild the grid, so do it manually.

	Bug fixes for colormap plane weirdness that visualization code had
	introduced and crashing when closing a file after a visualization
	has been applied to it.

2001-03-22  Jason Clark  <jclark@cs.unc.edu>

	* microscape.c: Changes to support dynamic loading of textures and
	switching between them (for visualizations)

	* import.C: Modifications to allow using a file-load style way of
	importing objects, instead of just typing in the path and
	filename.
	
	* import.C (handle_import_file_change): Fix to allow closing of
	imported files.

2001-03-14  Jason Clark  <jclark@cs.unc.edu>

	* microscape.c (CenterUbergraphics): New function to ensure that
	the local axis of imported objects is always centered around the
	center of the current height plane

2001-03-13  Jason Clark  <jclark@cs.unc.edu>

	* import.C: See below

	* import.h: Color selection is now a standard option

	* imported_obj.C: Made it compile with changes to MSIFileGenerator

	* microscape.c: New callback function for viz texture scaling.

2001-03-12  Jason Clark  <jclark@cs.unc.edu>

	* microscape.c: Includes and uses new import code

	* imported_obj.C: Modified to compile with changes to Ubergraphics

	* import.h: See below

	* import.C: New file for handling importing of objects.  Old
	import_tubes file was only for MSI files, this file is for any
	kind of file to be imported.  That's why it's a new file.

2001-03-09  Tom Hudson  <hudson@cs.unc.edu>

	* CollaborationManager.h (d_peerName, d_gotPeerServer,
	d_gotPeerRemote) : new data members.
	(handle_gotPeerServerConnection) : new function.
	(handle_gotPeerRemoteConnection) : same.
	(fullyConnected) : same.
	* CollaborationManager.C (constructor) : initialize new members.
	(initialize) : check for connected state on vrpn_Connection.
	(setPeername) : same.
	(handle_gotPeerServerConnection) : new function.
	(handle_gotPeerRemoteConnection) : same.
	(fullyConnected) : same.
	

2001-03-02  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (main): changed registration to always go through vrpn

2001-03-02  Aron Helser  <helser@cs.unc.edu>

	* microscape.c: Remove obsolete createForwarders call.

2001-02-24  Tom Hudson  <hudson@cs.unc.edu>

	* CollaborationManager.C (getPeer) : handle new vrpn syntax.
	(getPeerReplay) : same.
	(getServer) : same.
	* microscape.c (handle_openStreamFilename_change) : same.
	(handle_openSPMDeviceName_change) : same.
	(main) : same.

	* microscape.c (sharedGraphicsServer) : add VERBOSE output,
	turn off UberGraphics in multithreaded graphics implementation.
	(spawnSharedGraphics) : add VERBOSE output.
	(createGraphics) : same.
	(main) : don't start up Registration code in shared memory.

2001-02-09  Jason Clark  <jclark@cs.unc.edu>

	* microscopeHandlers.C: Changed handle_z_scale_change to call
	causeGridRebuild instead of causeGridRedraw

	* microscape.c: Added Tcl variables and callback functions to
	support	visualization interface

2001-02-01  Aron Helser  <helser@cs.unc.edu>

	* minit.c (handle_phantom_error): On any phantom error, release
	the phantom button.  

2001-01-19  Jason Clark  <jclark@cs.unc.edu>

	* microscape.c (handle_analyze_shape): Fixed analyze shape code to
	work by callback through TCL variable, the way I should have done
	it in the first place.

2001-01-14  Jason Clark  <jclark@cs.unc.edu>

	* microscape.c: Modified to use new Shape Analysis code and to
	use new "Visualization" code.

	* Makefile (USES_LIBS): Added new lib nmAnalyze

2001-01-14  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c (MicroscapeInitializationState) : add members
	logPhantom, phantomLogPath
	(MicroscapeInitializationState constructor) : initialize new members
	(ParseArgs) : read new command line argument -logphantom
	(Usage) : document -logphantom, fix a few line breaks
	(main) : handle logging Phantom

2000-01-08  Tom Hudson  <hudson@cs.unc.edu>

	* CollaborationManager.h:  add autodoc comments

	* microscape.c:  revise comments

2000-12-28  Aron Helser  <helser@cs.unc.edu>

	* globals.[Ch]: removed tcl_offsets for knobs, mode_change, and
	user_mode.  

	* interaction.[ch] (dispatch_event): Removed user parameter - always
	user 0. 
	(all): Changed to single head/hand tracker.
	Changed to user_0_mode. 

	* microscape.c (handleCharacterCommand): Obsolete, removed all
	commands accessible somewhere else.
	(handle_tcl_quit): new
	(handle_clear_markers_change): new 
	(all): Changed to single head/hand tracker.
	Changed to user_0_mode. 

	* microscopeHandlers.C (handle_z_dataset_change): removed
	handleCharacterCommand call, set user_0_mode instead
	(handle_z_scale_change): same

	* minit.c: Changed to user_0_mode, changed to single head/hand
	tracker. 

	* tcl_tk.[hc] (init_Tk_variables): Simplified user_mode to single
	tclvar_int, removed tcl knob handling. 
	(set_Tk_command_handler): removed.

2000-12-20  Aron Helser  <helser@cs.unc.edu>

	* all: 3rdtech merge into main trunk. 

2000-12-15  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (createNewMicroscope) : 
	added call to TipConv->changeDataset

2000-12-14  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c (shutdown_connections) : delete
	microscopeRedundancyController before deleting microscope_connection
	(handle_openStreamFilename_change) : same
	(handle_openSPMDeviceName_change) : same
	(openDefaultMicroscope) : same

2000-12-05  Tom Hudson  <hudson@cs.unc.edu>

	* interaction.c : add new Tclvars for network adaptation
	(handle_useRedundant_change) : new function
	(handle_numRedundant_change) : same
	(handle_redundantInterval_change) : same
	(handle_useMonitor_change) : same
	(handle_monitorThreshold_change) : same
	(handle_monitorDecay_change) : same
	* microscape.c : add new Tclvars for network statistics
	(handle_recordAdaptations_change) : new function
	(handle_msTimestampsName_change) : same

2000-12-05  Kwan Torrich Skinner <skinner@cs.unc.edu>

	* interaction.c (handle_commit_change) : new code to handle optimize now mode.
	(handle_commit_cancel) : same.
	(dispatch_event) : same.
	(doLine) : same.
	(interaction) : new parameter to setUserMode().
	* interaction.h : external reference to position_sphere(float, float, float)
	
2000-12-05  Russ Taylor  <taylorr@cs.unc.edu>

	* microscape.c (register_vrpn_phantom_callbacks) : Moved the
	Phantom to the correct location when using the new Workbench (head-
	tracked mono or stereo flat-screen CRT).

2000-11-30  Russ Taylor  <taylorr@cs.unc.edu>

	* microscape.c (find_center_xforms) : Modified the center code for
	the workbench case, so that it fills the whole screen and is tilted
	45 degrees away -- since we are now using horizontal flat-screen CRT.

2000-11-29  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (Usage) : add documentation of -daligner argument
	(main) : add printouts of what colorplane, colormap and heightplane
	were getting set to because there seems to be some problem with
	them getting set to what the user says they should be

2000-11-29  Tom Hudson  <hudson@cs.unc.edu>

	* minit.h : new file
	* interaction.c : #include minit.h
	(doSelect) : add test of microscope->haveMutex()
	* interaction.h : add #defines for knob box
	* microscape.c : move around #includes, #include minit.h
	(createNewMicroscope) : add call of microscope->requestMutex()
	* microscape.h : remove redundant, obsolete, or mis-placed items
	* microscapeHandlers.C : #include minit.h

	* tcl_tk.c : remove dead code

2000-11-20  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c : add vrpn_bool g_syncPending to reduce problems
	with rapidly changing between private and shared states

2000-11-20  Kwan Skinner  <skinner@cs.unc.edu>

	* microscape.c (teardownSynchronization) : new function.
	(createNewMicroscope) : do the right thing when a new streamfile is
	opened in collaboration.

2000-11-5  Tom Hudson  <hudson@cs.unc.edu>

	* mf.h : move file to attic
	* renderer.C : same
	* butt_mode.c : remove #include of mf.h
	* interaction.c : same
	* normal.c : same, remove call of #defines (DOCUMENT) from mf.h

2000-11-1  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c : remove includes of stm_file.h, stm_cmd.h,
	references to USE_VRPN_MICROSCOPE
	* microscopeHandlers.h : same
	* minit.c : same
	* normal.c : same
	* x_util.c : same

2000-10-26  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c : 
	disables microscopeRedundancyController by not creating it
	(just commented out the call to new so this pointer is always NULL now)
	this is just temporary for the release

2000-10-24  Adam Seeger  <seeger@cs.unc.edu>

	* error_display.C : merge with changes in thirdtech_branch

2000-10-23  Adam Seeger  <seeger@cs.unc.edu>

	* interaction.c (drawLine) : fixes to re-enable updatableQueue properly
	it still may not be disabled in all places that it should but it
	is better that it be overly enabled than overly disabled

2000-10-16  Tom Hudson  <hudson@cs.unc.edu>

	* interaction.c (updateMicroscopeRTTEstimate) : new function

2000-10-16  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c :  add colorplane, colormap, heightplane to istate
	(ParseArgs) : handle new arguments
	(Usage) : document new arguments
	(main) : use new arguments

2000-10-12  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (handle_openStreamFilename_change) : The log file was
	not getting reset if you reopened the same one. I thought this
	problem had been fixed before by making vrpn_get_connection_by_name 
	reset the log file if we tell it that we want to open a log file
	which is already open but perhaps this got changed back. Now we
	explicitly call reset() on the log file - this was discovered 
	because we weren't getting the grid size message and then we got
	a message with data in it that didn't match the grid size

2000-10-09  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (main) : added copy of file name out of the
	istate.afm.deviceName into the istate.afm.inputStreamName when
	the deviceName refers to a file - this was causing a bunch of stuff
	to be overwritten by a strcpy of the uninitialized 
	istate.afm.inputStreamName into a variable in AFMState

2000-10-05  Tom Hudson  <hudson@cs.unc.edu>

	* CollaborationManager.C (setPeerName) :  add diagnostics
	* collaboration.C :  delete entire file contents and replace with
	comment about intended unfufilled purpose of file
	* microscopeHandlers.C (cause_grid_redraw) :  delete dead code

2000-10-02  Kwan Torrich Skinner  <skinner@cs.unc.edu>
	
	* CollaborationManager.C (CollaborationManager::initialize) :
	Added two more collabVerbose statements for handServer binding.
	* microscape.c (createNewMicroscope) : changed 
	handCoordinateServer00 to handCoordinateServer0.

2000-10-02  Jason Clark  <jclark@cs.unc.edu>

	* minit.c: Added include <nmb_Debug.h> to get collabVerbose
	function.

2000-10-02  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c : add timeGraphics to initialization state
	(ParseArgs) : add handler for timeGraphics
	(Usage) : add documentation for timeGraphics
	(createGraphics) : check timeGraphics before creating a
	nmg_Graphics_Timer object, pass timeGraphics to RenderClient
	objects

2000-10-01  Jason Clark  <jclark@cs.unc.edu>

	* microscape.c: Added in Cloud Texturer server as an option

	* normal.c (Compute_Norm): New compute norm function

	* normal.h (Compute_Norm): Added new Compute_Norm function that
	takes floats instead of ints, so you can get the normal at an
	interpolated point

2000-09-28  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c (createNewMicroscope) : call doCallbacks() on measure
	lines after they're initialized to propagate those values into Tcl


2000-09-27  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c (shutdown_connections) : clean up after data_min
	and data_max to avoid segfault

2000-09-27  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c (setupSynchronization) : add long comment about
	the bugs we've had recently
	* tcl_tk.c (handle_surface_change) : remove dead code
	(init_Tk_control_panels) : same

2000-09-27  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (main) : moved call to init_Tk_control_panels to an
	earlier point so that interpreter exists when some Tclvars are
	initialized in nmb_Dataset - this didn't fix the bug I was tracking
	down but it seems to make Tclvar_list_of_strings::initializeTcl 
	happier (I don't see how else it could get the callback set up for
	changes from tcl although we don't expect such a change for most 
	if not all of these types of variables) and doesn't seem to break 
 	anything
	* tcl_tk.hc (init_Tk_control_panels) : split this into two functions
	called init_Tk_control_panels and init_Tk_variables - the second one
	probably contains some obsolete variables (this change was needed
	to allow the interpreter to be created earlier in the startup
	sequence)

2000-09-26  Tom Hudson  <hudson@cs.unc.edu>

	* CollaborationManager.C : include nmb_Debug.h
	(getPeer) : replace fprintf() with collabVerbose()
	(getPeerReplay) : same
	(getServer) : same
	(setLogging) : same
	(setPeerName) : same
	(sendOurTimer) : same
	(respondToPeerTimer) : same
	(handle_peerTimer) : same
	(handle_timerResponse) : same
	* microscape.c : handle -cverbosity command line argument

	* interaction.c : add fprintf() during feelAhead
	* microscopeHandlers.C : same


2000-09-21  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c (local_time_sync) : must return a value

2000-09-21  Tom Hudson  <hudson@cs.unc.edu>

	* tcl_tk.c (init_Tk_control_panels) : take collaborationTimer as
	argument and pass to Tclnet_init()

	* microscape.c (local_time_sync) : new function
	(handle_synchronize_timed_change) : call local_time_sync() (sometimes)
	(handle_copy_to_private) : call local_time_sync()
	(createNewMicroscope) : call linkMicroscopeToInterface()
	(main) : same;  handle & display timings

	* CollaborationManager.C : d_timer, d_myId_svr,
	d_myId_rem, d_timerSN_type, d_timerSNreply_type : new data members
	(mainloop) : call sendOurTimer() and respondToPeerTimer()
	(initialize) : set up VRPN ids, handlers
	(setPeerName) : same
	(setTimer) : new function
	(sendOurTimer) : same
	(respondToPeerTimer) : same
	(handle_peerTimer) : same
	(handle_timerResponse) : same

	* interaction.c : clean up old code & comments
	(FDOnOffMonitor) : new class
	(setupHaptics) : use objects on haptic_manager instead of
	local static objects;  handle feelahead.
	(doLine) : use FDOnOffMonitor
	(doFeelLive) : same
	(doFeelFromGrid) : same;  call setupHaptics()
	(setupSweepIcon) : new function
	(linkMicroscopeToInterface) : same
	(initializeInteraction) : create objects on haptic_manager

2000-09-14  Kwan Torrich Skinner <skinner@cs.unc.edu>

	* nM_coord_change.C (mainloop) : made a call to server_mainloop, killed
	a compiler warning.

2000-09-14  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c : textureConversionMapName initialized to "none"
	instead of "CUSTOM"

2000-09-13  Kwan Torrich Skinner  <skinner@cs.unc.edu>
	* microscape.c (initialize_environment) : replaced instances of
	ccs0 with handCoordinateServer0 and instances of cmode0 with
	userModeServer0.
	* CollaborationManager.C (setPeerName) : same.

2000-09-12  Kwan Torrich Skinner  <skinner@cs.unc.edu>
	* microscape.c (main): moved gethostname call and corresponding
	neighboring code to be executed before the dataset is initialized to
	ensure the correct hostname is assigned to d_hostname in nmb_Dataset.

2000-09-08  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (handle_openStreamFilename_change): took out
	delete of microscope connection 
	(the problem was in not unregistering vrpn handlers with
	references to the old microscope)

2000-09-07  Adam Seeger  <seeger@cs.unc.edu>
	
	* microscape.c (handle_openStreamFilename_change) : added delete
	of microscope connection before getting a new one - this somehow
	fixes a crash on the pc when opening the same file more than once
	* microscopeHandlers.C (handle_z_scale_change): this now updates
	nmb_Decoration so it can scale the modify markers to match the plane
	* interaction.c (handle_commit_cancel): allows cancelling of 
	planned line modification in USER_GRAB_MODE, USER_SCALE_UP_MODE,
	USER_SCALE_DOWN_MODE, USER_LIGHT_MODE, and USER_MEASURE_MODE since
	I think it would make things more convenient and I don't see any harm
	in it (an alternative could be to disable the cancel button if
	you aren't in touch before modify or select mode)

2000-09-04  Adam Seeger  <seeger@cs.unc.edu>

	* microscopeHandlers.C (handle_doRelaxComp_change): Changed to make
	this consistent with how things are done in nmm_MicroscopeRemote.C

2000-09-01  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (main) : added check of 
	microscope_connection->doing_okay() to fix problem of trying to open
	an invalid file on the command line

2000-08-31  Kwan Torrich Skinner  <skinner@cs.unc.edu>

	* all : merged merge-2000-summer-thirdtech code with trunk.

2000-08-30  Adam Seeger  <seeger@cs.unc.edu>

	* Makefile: took out RhinoIO for VC compile
	* microscape.c (MicroscapeInitializationState constructor): adds
	initialization for NIC_IP and logTimestamp
	* microscape.[ch], minit.c: fixed confusion over name of 
	function get_Plane_Extents changing to get_Plane_Centers

2000-08-27  Kwan Torrich Skinner  <skinner@cs.unc.edu>

	* microscape.c : converted procProgNames from nmb_ListOfStrings to 
	Tclvar_list_of_strings.

2000-08-17  Adam Seeger  <seeger@cs.unc.edu>

	* microscape.c (handle_texture_dataset_change): sets slider limits
		a little differently (using minNonZeroValue instead of minValue)

2000-08-16  Tom Hudson  <hudson@cs.unc.edu>

	* microscape.c (main):  added call to
	microscope->EnableUpdatableQueue(VRPN_TRUE).
	* interaction.c (drawLine):  new function.  Added calls to
	microscope->EnableUpdatableQueue().
	(drawLineStep):  same.
	(handle_commit_change):  factored out large case and loop into
	drawLine() and drawLineStep().

2000-08-15  Jeffrey Juliano  <juliano@cs.unc.edu>

	* Makefile.additional-targets: New file.
	* Makefile: Post-include Makefile.additional-targets.

2000-08-14  Jeffrey Juliano  <juliano@cs.unc.edu>

	* microscape.c (main): Add call to ios::sync_with_stdio().
	* microscape.c (setupCallbacks): Pass correct dataset ptr.

2000-08-11  Kwan Torrich Skinner  <skinner@cs.unc.edu>

	* all: Merge thirdtech_branch code to trunk.

2000-08-10  Jeffrey Juliano  <juliano@cs.unc.edu>

	* ChangeLog: New File.
	* microscape.c (find_center_xforms): Clean up.

2000-08-09  Jeffrey Juliano  <juliano@cs.unc.edu>

	* microscape.c (Usage): Change linkage to internal (static).
	(handleTermInput): Same.
	(handleMouseEvents): Same.
	(get_Plane_Centers): Same.
	(find_center_xforms): Same.
	(vec_cmp): Same.
	(guessAdhesionNames): Same.

2000-08-06  Jeffrey Juliano  <juliano@cs.unc.edu>

	* microscape.c: tell emacs to use c++-mode

