2002-11-06  Adam Seeger  <seeger@cs.unc.edu>

	* nmui_SEM.C : added some calls to image_viewer->dirtyWindow() when
	the colormap changes

2002-11-04  David Borland <borland@cs.unc.edu>

        * nmSEM.dsp : added nmUI to the include path because the nmui_SEM
        class now contains an nmui_ColorMap member.

        * nmui_SEM.[Ch] : added ability to select a colormap and alpha value
        for the SEM projective texture.

2002-09-30  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_EDAX.h : fixed problem with default z adc offset introduced in last
	commit
	* nmm_Microscope_SEM.C : added messages from server to client about
	dot spacing, point report enable status, and line spacing; created 
	separate message to report timing status (no longer shared with exposure
	status message)
	* nmm_Microscope_SEM.h: "
    * nmm_Microscope_SEM_Remote.C: "

2002-09-27  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_EDAX.h : changed defaults for x and y dac offsets to match Hitachi better

2002-09-04  Adam Seeger  <seeger@cs.unc.edu>

	* nmui_SEM.C : name change: SEM_DATA --> VIDEO

2002-08-13  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM_Remote.[hC]: added buffers to temporarily store
	latest images
	* nmui_SEM.[Ch]: removed buffers that temporarily stored latest images

2002-07-03  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM_Remote.h (lastScanMessageCompletesImage): 
        new function
	* nmui_SEM.C (handle_device_change): now uses the function
	lastScanMessageCompletesImage 

2002-05-30  David Borland <borland@cs.unc.edu>

        * nmui_SEM.C : made changes for the new SURFACE_REGISTRATION_COORD
	and MODEL_REGISTRATION_COORD graphics modes

2002-05-10  Adam Seeger  <seeger@cs.unc.edu>

	* nmui_SEM.C (handle_device_change):  changed unknown-messge-type
	warning statement.

2002-03-21  Aron Helser  <helser@cs.unc.edu>

	* nmSEM.dsp: Release config now builds.

2002-01-31  David Marshburn  <marshbur@cs.unc.edu>

	* nmSEM.dsp:  builds with non-static run-time libraries.

2001-12-20    <marshbur@cs.unc.edu>

	* nmSEM.dsp:  removed references to ImgFormat

2001-12-20  David Marshburn  <marshbur@evans.cs.unc.edu>

	* Makefile:  remove ImgFormat from USES_LIBS

2001-11-27  Adam Seeger  <seeger@cs.unc.edu>

	* nmui_SEM.C (handle_texture_display_change) : 
	removed call to disableOtherTextures()

2001-09-01  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_EDAX.h : added constant EDAX_MIN_POINT_DWELL_SEC
	* nmm_Microscope_SEM.hC : added messages for timing test, 
        point reporting, dot spacing, line spacing, linear exposure, area
        exposure, setting magnification
        changed addPolyline message to include linear exposure parameter which
        gets used instead of the area exposure if the line width is 0
        (convert_DAC_to_nm): new function
        (convert_nm_to_DAC): new function
	* nmm_Microscope_SEM_Remote.hC (convert_DAC_to_nm): new function
        (convert_nm_to_DAC): new function

2001-08-20  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM.hC : added new message type to report the exposure
	status
	* nmm_Microscope_SEM_Remote.hC: "

2001-07-27  Adam Seeger  <seeger@cs.unc.edu>

	* nmui_SEM.C (nms_SEM_ui): set better default location for image window

2001-06-17  Tom Hudson  <hudson@cs.unc.edu>

	* nmm_EDAX.h : reorder #includes, fix braces.
	* nmm_Microscope_SEM_Remote.h : reorder #includes, fix braces.
	* nmui_SEM.h : reorder #includes, fix braces.

2001-05-14  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM.Ch : added encode and decode functions related
		to exposing a pattern with the electron beam; the new messages
		are: ClearExposePattern, AddPolygon, AddDumpPoint,
		ExposePattern, SetBeamCurrent, SetBeamWidth
	* nmm_Microscope_SEM_Remote.Ch (clearExposePattern): new function
	(addPolygon) : new function to send a polygon
	(addPolyline) : new function to send a polyline
	(addDumpPoint) : new function to send a rest point
	(clearExposePattern) : new function to clear the pattern
	(exposePattern) : new function to draw the pattern as defined
	(setBeamCurrent) : new function - even if we don't have control over
		this value, in order for the exposure to be calculated 
		correctly, the client needs to tell the server what the 
		picoAmmeter has measured
	(setBeamWidth) : new function - a similar situation to that for 
		setBeamCurrent - this is not so much controlling the value as
		informing the server about what its operating conditions are
	* nmm_EDAX.h : changed defaults for horizontal and vertical scan
	retrace delays to 0 instead of 750 usec

2001-04-18  Adam Seeger  <seeger@cs.unc.edu>

	* nmui_SEM.C : added calls in handle_device_change and 
	handle_acquire_image to
        nmm_Microscope_SEM_Remote::setExternalScanControlEnable to enable and
	disable EDAX control over scanning for image acquisition before and
	after sending a request for image acquisition

2001-03-02  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_EDAX.h: reduced max DAC resolution to 4096x3200 temporarily
	until we get version 3.3 of the EDAX library which should let us do
	65536x51200
        * nmm_Microscope_SEM.[Ch] : added magnification message
        * nmm_Microscope_SEM_Remote.C : changed default values of resolution
	and max scan to be non-zero so getScanRegion_nm (a new function)
	doesn't generate division by 0 errors; added stuff for magnification
	message

2001-02-05  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_EDAX.h : added a new class called nmm_EDAX as a utility class
	for setting parameters of an EDAX-based SEM controller - takes care of
	things like specifying what resolutions are allowed
	Also, this file contains a bunch of constants to make code easier 
	to read
	* nmm_Microscope_SEM.[Ch] (nmm_Microscope_SEM) : added various
	initialization and functions to handle new message types:
        (client->server):
        SetPointDwellTime, SetBeamBlankEnable, GoToPoint, SetRetraceDelays,
	SetDACParams, SetExternalScanControlEnable 
        (server->client):
        Acknowledge messages for above plus ReportMaxScanSpan to describe
	the allowed coordinates for GoToPoint
	* nmm_Microscope_SEM_Remote.[Ch] (nmm_Microscope_SEM_Remote) : stuff
	to handle the new message types
        * nmui_SEM.C : replaced a bunch of code for reconciling freedom in
	user interface variables with constraints in the microscope - this is
	now handled by the nmm_EDAX class

2000-11-29  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM.C (encode_ScanlineData) : fixed incorrect message
	length calculation
	* nmui_SEM.C (handle_device_change) : added change of value range in
	image viewer window when pixel type changes
	replaced use of template nmb_ImageArray with non-template nmb_ImageArray

2000-10-02  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM.Ch (encode_ScanlineData,
                                 decode_ScanlineDataHeader,
                                 decode_ScanlineDataLine) : 
	made ScanlineData message more
	general so it can contain different pixel types (byte, short, float)
	got rid of WindowLineData message since ScanlineData should be 
	sufficient for all our purposes now
	* nmm_Microscope_SEM_Remote.C (getWindowLineData - removed, 
                                     RcvWindowLineData - removed,
                                     RcvScanlineData) :
	changes to match those in nmm_Microscope_SEM.C
	* nmui_SEM.C (handle_device_change) :
	changes to match those in nmm_Microscope_SEM_Remote.C
	handles ScanlineData messages that contain byte or short data but
	not float (we don't want to send float data since its slower)
