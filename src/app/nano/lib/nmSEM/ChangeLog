2001-03-02  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_EDAX.h: reduced max DAC resolution to 4096x3200 temporarily
	until we get version 3.3 of the EDAX library which should let us do
	65536x51200
        * nmm_Microscope_SEM.[Ch] : added magnification message
        * nmm_Microscope_SEM_Remote.C : changed default values of resolution
	and max scan to be non-zero so getScanRegion_nm (a new function)
	doesn't generate division by 0 errors; added stuff for magnification
	message

2001-02-05  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_EDAX.h : added a new class called nmm_EDAX as a utility class
	for setting parameters of an EDAX-based SEM controller - takes care of
	things like specifying what resolutions are allowed
	Also, this file contains a bunch of constants to make code easier 
	to read
	* nmm_Microscope_SEM.[Ch] (nmm_Microscope_SEM) : added various
	initialization and functions to handle new message types:
        (client->server):
        SetPointDwellTime, SetBeamBlankEnable, GoToPoint, SetRetraceDelays,
	SetDACParams, SetExternalScanControlEnable 
        (server->client):
        Acknowledge messages for above plus ReportMaxScanSpan to describe
	the allowed coordinates for GoToPoint
	* nmm_Microscope_SEM_Remote.[Ch] (nmm_Microscope_SEM_Remote) : stuff
	to handle the new message types
        * nmui_SEM.C : replaced a bunch of code for reconciling freedom in
	user interface variables with constraints in the microscope - this is
	now handled by the nmm_EDAX class

2000-11-29  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM.C (encode_ScanlineData) : fixed incorrect message
	length calculation
	* nmui_SEM.C (handle_device_change) : added change of value range in
	image viewer window when pixel type changes
	replaced use of template nmb_ImageArray with non-template nmb_ImageArray

2000-10-02  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM.Ch (encode_ScanlineData,
                                 decode_ScanlineDataHeader,
                                 decode_ScanlineDataLine) : 
	made ScanlineData message more
	general so it can contain different pixel types (byte, short, float)
	got rid of WindowLineData message since ScanlineData should be 
	sufficient for all our purposes now
	* nmm_Microscope_SEM_Remote.C (getWindowLineData - removed, 
                                     RcvWindowLineData - removed,
                                     RcvScanlineData) :
	changes to match those in nmm_Microscope_SEM.C
	* nmui_SEM.C (handle_device_change) :
	changes to match those in nmm_Microscope_SEM_Remote.C
	handles ScanlineData messages that contain byte or short data but
	not float (we don't want to send float data since its slower)
