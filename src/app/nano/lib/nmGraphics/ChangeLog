2001-07-03  Tom Hudson  <hudson@cs.unc.edu>

	* nmg_RenderClientImpl.C (causeGridRebuild) : New function -
	overrides virtual function on nmg_Graphics_Implementation.
	(checkGridSize) : Bugfix.
	* spm_gl.c (init_vertexArray) : Clean up memory leak.

2001-07-03  Tom Hudson  <hudson@cs.unc.edu>

	* nmg_GraphicsImpl.C (checkGridSize) : New function.
	(mainloop) : Call checkGridSize so derived classes can override.
	* nmg_RenderClientImpl.C (checkGridSize) : New function.

2001-07-03  Tom Hudson  <hudson@cs.unc.edu>

	* nmg_RenderServer.C : New members d_messagesSent, d_bytesSent.
	(constructor) : Initialize new members to 0.
	(messagesSent) : New function.
	(bytesSent) : Same.
	(sendPartialDepthData) : Maintain d_messagesSent and d_bytesSent.
	(sendPartialPixelData) : Same.

	* nmg_RenderServerStrategies.C
	(nmg_RSViewS_Ortho::setViewingTransform) : Generalize the
	currently used approximate viewing transform.

2001-06-22  Tom Hudson  <hudson@cs.unc.edu>

	* nmg_RenderClientImpl.C
	(nmg_RCIStrategy::handleDepthData) : buffer is of vrpn_float32,
	not vrpn_float64
	(nmg_RCIS_Mesh::handleDepthData) : same

	* nmg_RenderServer.C (setViewTransform) : override default
	nmg_Graphics_Implementation to allow d_viewStrategy to decide
	what to do with the new transform sent by the client.
	(fixes server-quat-jitter bug, which was some sort of unholy
	race condition I never figured out the mechanism for.
        unfortunately adds dependancy on v.h)
	* nmg_RenderServerStrategies
	(nmg_RenderServer_ViewStrategy::setViewTransform) : new function.
	Add comments to avoid confusion with setViewingTransform (what
	bad naming).
	(nmg_RSViewS_Ortho::setViewTransform) : same
	(nmg_RSViewS_Slave::setViewTransform) : same.  Put in hacks for
	alternate size screens, but I still think vlib does this
	entirely wrong.
	

2001-06-20  Tom Hudson  <hudson@cs.unc.edu>

	* nmg_GraphicsImpl.C (constructor) : register handler for
	d_causeGridReColor_type
	(handle_causeGridReColor) : new function
	* nmg_GraphicsRemote.C (causeGridReColor) : implement function
	that had been left blank

	* nmg_RenderClient.C : add d_transformBlocks
	(constructor) : initialize new member variable
	(setViewTransform) : check new member variable
	(causeGridReColor) : new function
	(causeGridRedraw) : new function
	(causeGridRebuild) : new function
	(setAlphaPlaneName) : same
	(setColorPlaneName) : same
	(setContourPlaneName) : same
	(setOpacityPlaneName) : same
	(setHeightPlaneName) : same

	* nmg_RenderServerStrategies.C
	(nmg_RSViewS_Ortho::setViewingTransform) : hack scaleTo to
	approximate correctness for evans

2000-10-04  Tom Hudson  <hudson@cs.unc.edu>

	* nmg_RenderClient.C (blockTimer): remove invalid error message

2000-10-03  Kwan Torrich Skinner  <skinner@cs.unc.edu>

	* globjects.c (make_collab_hand_icon): fixed invscale hand
	icon scale factor so that it stays the same size when scaling in
	and out.
	
2000-10-02  Adam Seeger  <seeger@cs.unc.edu>

	* nmg_GraphicsImpl.C (loadRawDataTexture): this is only used
	for SEM data at the moment; this generalizes it to handle data
	with different types (float and short in addition to byte)

2000-10-02  Jason Clark  <jclark@cs.unc.edu>

	* nmg_RenderServerStrategies.C (render): Call base strategy class
	render to ensure that nmg_RenderServer::mainloop is called.

2000-10-02  Tom Hudson  <hudson@cs.unc.edu>

	* nmg_RenderClient.C : new data member d_timeGraphics
	(setGraphicsTiming) : new function
	(blockTimer) : checks d_timeGraphics before executing

2000-10-01  Jason Clark  <jclark@cs.unc.edu>

	* graphics.c (buildRemoteRenderedTexture) : Changed
	RULERGRID_TEX_ID to REMOTE_DATA_TEX_ID for consistency

	* nmg_RenderServer.C: Added cloud strategy to constructor

	* nmg_RenderServer.h: Add friend class of the
	nmg_RenderServer_Strategy so that the strategies have a way of
	updating the pixel buffer without exposing that to everyone

	* nmg_RenderClient.C: Added needed accessors that simply pass the
	request to the nmg_Graphics_RenderClient_Implementation object.

	* nmg_RenderClient.h: same

	* nmg_Graphics.h: Added new option to enum RemoteColorMode of
	CLOUDMODEL_COLORS

	* nmg_RenderServerStrategies.C: Source file for the render server
	strategies.  These were broken out of nmg_RenderServer.h. Actually
	done by Tom, but I am committing them.

	* nmg_RenderServerStrategies.h: Header file for the render server
	strategies.

	* nmg_CloudTexturer.C: Source file for new class for "Cloud"
	rendering. Cloud rendering is based on empirical observations of
	clouds from an airplane.

	* nmg_CloudTexturer.I: Inline file for new class for "Cloud" rendering

	* nmg_CloudTexturer.h: Header file for new class for "Cloud" rendering

2000-09-14  Adam Seeger  <seeger@cs.unc.edu>

	* nmg_GraphicsImpl.C (createRealignTextures) : replaced "CUSTOM"
	colormap conversion code to use a simple greyscale map
        * nmg_GraphicsImpl.C (setRealignTexturesConversionMap) : replaced
        "CUSTOM" with "none"
        * nmg_GraphicsRemote.C (setColorMapName) : replaced "CUSTOM" with
	"none"
	( there's no reason CUSTOM can't be a normal colormap just
	  just like the others so this makes things cleaner)

2000-09-13  Kwan Torrich Skinner <skinner@cs.unc.edu>

	* globjects.c (make_collab_hand_icon) : commented out glScalef().

2000-09-13  Adam Seeger  <seeger@cs.unc.edu>

	* spm_gl.c (describe_gl_vertex) : there was some remaining confusion
	from the merge that I attempted to fix. I believe it mostly had to
	to do with the use of the g_just_color variable and the
	related CauseGridReColor() function. This fixes a bug in which changing
	the colormap plane made the surface partially disappear and look
	nasty where it didn't disappear

2000-09-11  Adam Seeger  <seeger@cs.unc.edu>

	* spm_gl.c (spm_render_mark) : In addition to drawing a line from
	Top to Bottom this now draws a line with a different color 
	which is the reflection about Bottom (the intersection tells you
	where the tip was and the size may be extended in both directions so
	that you can see where the intersection with the surface is even if
	you aren't looking at the surface for the same channel used to 
	set the height of the markers) (I think it looks better at least)

2000-09-01  Adam Seeger  <seeger@cs.unc.edu>

	* nmg_GraphicsImpl.C (nmg_Graphics_Implementation),
	(causeGridRebuild) : removed checks of the g_VERTEX_ARRAY variable
	as was done in thirdtech_branch so that even when we don't use
	the vertex array extension, the arrays can still be used for
	storing calculated normals (I had broken this for the pc version in 
	my previous commit)

2000-08-31  Adam Seeger  <seeger@cs.unc.edu>

	* nmg_GraphicsImpl.C (nmg_Graphics_Implementation) : put back in
	some checks of the g_VERTEX_ARRAY
	* nmg_GraphicsImpl.C (causeGridRebuild) : put back in some checks
	of the g_VERTEX_ARRAY
	* spm_gl.c (describe_gl_vertex) : fixed some stuff that got broken
	in the merge - in particular where the local variable Vertex was
	getting set (it wasn't getting set at all perhaps); now it is set
	both at the beginnning (so all the opacity mapping stuff works) and
	at the end where it gets copied into the vertex array

2000-08-31  Kwan Torrich Skinner  <skinner@cs.unc.edu>

        * all : merged merge-2000-summer-thirdtech code with trunk.

2000-08-30  Adam Seeger  <seeger@cs.unc.edu>

        * Makefile: excludes export_scene.C for VC compile

2000-08-27  Adam Seeger  <seeger@cs.unc.edu>

	* chartjunk.c (scale_display): Changed snprintf back to 
	sprintf to fix compile error on pc (its not as safe but its still
	much better than before)

2000-08-24  Adam Seeger  <seeger@cs.unc.edu>

	* chartjunk.c (scale_display): changed to dynamically allocate 
	the buffer for the message displayed on the screen 
	containing the file name so that really long file names
	don't get cut off. Also, changed sprintf to snprintf so
	we don't print past the end of the buffer just in case.

2000-08-17  Adam Seeger  <seeger@cs.unc.edu>

	* nmg_GraphicsImpl.C (createRealignTextures): changed to look at
	minNonZeroValue instead of minValue

2000-08-14  Jeffrey Juliano  <juliano@cs.unc.edu>

	* export_scene.C (get_view_xform): Read unit system from template.
	(export_scene_to_openNURBS): Perform error-checking on args.
	Write unit system to .3dm file.  Put mesh on a layer.

2000-08-11  Kwan Torrich Skinner  <skinner@cs.unc.edu>

	* all: Merge thirdtech_branch code to trunk.

2000-08-11  Jeffrey Juliano  <juliano@cs.unc.edu>

	* export_scene.C (build_mesh): Fix scaling.
	(compute_view_xform): Factor scale out of rot matrix before
	convering to quat, then handle scale separately.  Handle both grid
	scale factor and model scale factor.  May not do the right thing
	with real datasets, but works with ppm file datasets.

2000-08-11  Jeffrey Juliano  <juliano@cs.unc.edu>

	* export_scene.C (compute_view_xform): Debug messages proving that
	quat lib doesn't do what I thought it was advertising.

2000-08-11  Jeffrey Juliano  <juliano@cs.unc.edu>

	* export_scene.C (build_mesh): Add xform to arg list.  Use xform.
	(build_viewport_from_nano): Remove incorrect q_normalize.
	(compute_view_xform, get_view_xform, export_scene_to_openNURBS):
	Incorporate scale.

2000-08-11  Jeffrey Juliano  <juliano@cs.unc.edu>

	* export_scene.C (get_corners_from_file, compute_view_xform):
	New functions.
	(get_view_xform): Change parameter list. Move a lot of stuff to
	the new functions.
	(export_scene_to_openNURBS): Adjust arguments to get_view_xform.

2000-08-10  Jeffrey Juliano  <juliano@cs.unc.edu>

	* ChangeLog: New file.
	
	* export_scene.C (QuadCorners): New class.
	(write_q_vec): New function.
	(operator <<): Same.
	(rhinoException_to_string): Same.
	(set_quad_corner): Same.
	(get_view_xform): Same.
	(export_scene_to_openNURBS): Add error checking. Call get_view_xform.

2000-08-07  Jeffrey Juliano  <juliano@cs.unc.edu>

	* nmg_GraphicsImpl.C (makeAndInstallRulerImage): Allocate correct
	size array.  `texture-size' is the length of a *side*, not the
	number of array cells.

2000-08-06  Jeffrey Juliano  <juliano@cs.unc.edu>

	* spm_gl.c: Tell emacs to use c++-mode.
	* nmg_GraphicsImpl.C (makeAndInstallRulerImage): Move deine of
	macro `texel' out of funct body, and undef texel after funct body.
	* graphics_globals.c: Tell emacs to use c++-mode.
	* graphics.h (buildAllTextures, makeAndInstallRulerImage): Remove
	delcarations for undefined functions. (They were previously moved
	to nmg_GraphicsImpl.)
	* graphics.c: Change "#define min" to "#define NMG_MIN".
	Change "#define max" to "#define NMG_MAX".
	Remove unused preprocessor macros.
	Adjust (fix) comments.
	Remove macro `vec_cmp' because unused.
	Tell emacs to use c++-mode.
	(createPyramid, makeTexture): Make static (internal linkage).

2000-08-03  Jeffrey Juliano  <juliano@cs.unc.edu>

	* nmg_GraphicsImpl.C (nmg_Graphics_Implementation): clean up

2000-08-02  Jeffrey Juliano  <juliano@evans.cs.unc.edu>

	* nmg_GraphicsImpl.C (makeAndInstallRulerImage): dynamically
	allocate texture array (was hardcoded to 512x512 cells).
	Handle float pt. rounding issues in texture size computation.

2000-08-01  Jeffrey Juliano  <juliano@evans.cs.unc.edu>

	* spm_gl.c (describe_gl_vertex): small speed/clarity optimization.
	Dereference pointer once, cache result in a reference.

	* graphics.h: include just quat.h instead of all of v.h

