/* The nanoManipulator and its source code have been released under the
 * Boost software license when nanoManipulator, Inc. ceased operations on
 * January 1, 2014.  At this point, the message below from 3rdTech (who
 * sublicensed from nanoManipulator, Inc.) was superceded.
 * Since that time, the code can be used according to the following
 * license.  Support for this system is now through the NIH/NIBIB
 * National Research Resource at cismm.org.

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

#ifndef LINLEASTSQR_H
#define LINLEASTSQR_H

/* linearLeastSquaresSolve():
     This is a simplified interface to the CLAPACK function
     dgels() which frees you from using the f2c header file, 
     special FORTRAN data types and allocating work space for dgels.

     solves for the X that minimizes || B - A*X || and puts the result
     into the first n elements of B, the residual is the sum of the
     squares of the result values put in B[n+1] to B[m-1]
     (it is assumed that n <= m and that
     A is in the order col[0], col[1] ... col[n-1] where each col has m
     elements and B has m elements)
*/
int linearLeastSquaresSolve(int m, int n, double *A, double *B);

/* linearEqualityConstrainedLeastSquaresSolve():
     This is a simplified interface to the CLAPACK function
     dgglse() which frees you from using the f2c header file,
     special FORTRAN data types and allocating work space for dgglse

     solves for the X that minimizes || C - A*X ||_2 subject to the
     constraint B*X = D and puts the result into X
     A is an M by N matrix, B is a P by N matrix, C is an M-vector,
     D is a P-vector, where P <= N <= M+P

     matrices are in the order col[0], col[1] ... col[n-1] where each col 
     has m elements for A and p elements for B

     The error is returned in the elements C[n-p]..C[m-1]
*/

int linearEqualityConstrainedLeastSquaresSolve(int m, int n,
	int p, double *A, double *B, double *C, double *D, double *X);


#endif
