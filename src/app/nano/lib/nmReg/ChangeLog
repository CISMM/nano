2001-06-17  Tom Hudson  <hudson@cs.unc.edu>

	* correspondence.C : reorder #includes, fix brackets.
	* correspondence.h : reorder #includes, fix brackets.
	* nmr_Gaussian.h : reorder #includes, fix brackets.
	* nmr_Registration_Interface.h : reorder #includes, fix brackets.
	* transformSolve.h : reorder #includes, fix brackets.

2001-05-31  Aron Helser  <helser@cs.unc.edu>

	* nmr_RegistrationUI.Ch (nmr_RegistrationUI): Take dataset as arg.
	(createResamplePlane): New fcn, creates a plane with same
	resolution and region as heightplane. 
	(handle_resamplePlaneName_change): new
	
2001-05-22  Adam Seeger  <seeger@cs.unc.edu>

	* nmr_AlignerMI.hC: new file containing code to do alignment by
	maximization of mutual information
	* nmr_Gaussian.hC: new file - utility to evaluate a gaussian 
	efficiently using a lookup table
	* nmr_Util.hC (resample): new function to resample an image
	              (sampleUniformDistribution): random number generator
	* nmr_Registration_Impl.C (registerImages): added some code to
	calculate and print out the mutual information each time the 
	transformation is computed (this is just a test)

2001-03-02  Adam Seeger  <seeger@cs.unc.edu>

	* Makefile: added glut as an external lib
	* correspondenceEditor.hC (added a callback thing so 
	that changes in the correspondence can be tracked externally)
	* nmr_Registration_ImplUI.hC (handle_CorrespondenceChange): new function
	* nmr_Registration_Proxy.hC (constructor): for local implementation,
	now creates a server using the connection passed in as a parameter and
	connects to it with a client as would happen if the registration code
	were running remotely (this made it simpler to propagate transformation
	updates since everything goes through the vrpn callback whether its
	coming from the local or remote registration implementation - like the
	phantom server)
	
2000-10-02  Adam Seeger  <seeger@cs.unc.edu>

	* nmr_RegistrationUI.Ch (handleRegistrationChange) : fixed problem
	with the transformation sent to graphics for computing texture
	coordinates (it didn't work for AFM to AFM registration because
	of stuff for imageFromWorld transformation that was added in 
	last commit). Also, cleaned up naming scheme for transformations to
	make the code easier to understand. A comment at the top of
	nmr_RegistrationUI.h explains the different coordinate systems.
        * nmr_Util.C (createResampledImage,
        createResampledImageWithImageSpaceTransformation) : replaced 
	getValueInterpolated with getValueInterpolatedNZ to avoid mixing
	of zero (unset) with nonzero (set) values - this messes up scaling
        * nmr_Util.C (addImage) : made this function do something more
        correct by using minNonZeroValue instead of trying to guess
        some good values to use to preserve the intensity scale

2000-09-23  Adam Seeger  <seeger@cs.unc.edu>

	* nmr_ImageTransform.hC (invert): new function to invert the 
	transformation matrix used in nmr_ImageTransformAffine
	* nmr_RegistrationUI.Ch : new variables d_invertWarp,
	d_imageTransformWorldSpace, d_imageTransformImageSpace, 
        d_imageTransformImageSpaceInv, which replace d_imageTransform
	* nmr_RegistrationUI.Ch (handleRegistrationChange) : now computes
	these new transformations (also adds missing transformation from
	world to image space for projection image which
	hadn't caused problems for SEM data because we were assuming that they
	were the identity before (by default they were set the same and
	the SEM data doesn't have any region information that would cause
	this to change) - this caused problems when we tried to register
	two AFM images.
	* nmr_RegistrationUI.Ch (createResampleImage) : 
	added the code here to hande the new option of resampling the
	Topography image onto the Projection image
	(calls a new function with a long name: 
	createResampledImageWithImageSpaceTransformation)
	* nmr_Util.Ch (createResampledImageWithImageSpaceTransformation) :
	new function that is more efficient than older createResampleImage 
	functions but assumes a 2D->2D transformation that maps directly from
	pixels in one image to pixels in other image instead of a
	3D-2D projection from world space to pixels in an image

2000-08-17  Adam Seeger  <seeger@cs.unc.edu>

	* correspondence.C (Correspondence): switched malloc to new
	* correspondence.C (init): switched malloc to new
	* correspondenceEditor.C (eventHandler): handles errors from getPoint
		better
	* correspondenceEditor.C (setImage): uses minNonZeroValue instead of
		minValue
	* nmr_Registration_Impl.C (nmr_Registration_Impl): adds some
		data member initialization that was missing
	* nmr_Registration_Impl.C (registerImages): adds stuff to handle
		fewer constraints and switches the transformation type
		accordingly in call to transformSolver
	* nmr_Registration_ImplUI.C (newScanline): creates a temporary
		image so we can do some contrast adjustment for 
		display purposes but doesn't do this yet
	* nmr_Registration_Interface.h : adds enum values to 
		nmr_TransformationType
	* transformSolve.C (transformSolver): cleaned up this function
		quite a bit, making it simpler and easier to use - some
		functionality was removed but I decided it wasn't going to
		be useful; made it easier to use the things that are in fact
		useful but weren't be used like the transformations with fewer
		parameters
	* transformSolve.h : removed a bunch of headers for old code from
		transformSolve.C and the enum xform_solution_t

2000-08-11  Kwan Torrich Skinner  <skinner@cs.unc.edu>

	* all: Merge thirdtech_branch code to trunk.

