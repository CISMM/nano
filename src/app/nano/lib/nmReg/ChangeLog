2000-09-23  Adam Seeger  <seeger@cs.unc.edu>
	* nmr_ImageTransform.hC (invert): new function to invert the 
	transformation matrix used in nmr_ImageTransformAffine
	* nmr_RegistrationUI.Ch : new variables d_invertWarp,
	d_imageTransformWorldSpace, d_imageTransformImageSpace, 
        d_imageTransformImageSpaceInv, which replace d_imageTransform
	* nmr_RegistrationUI.Ch (handleRegistrationChange) : now computes
	these new transformations (also adds missing transformation from
	world to image space for projection image which
	hadn't caused problems for SEM data because we were assuming that they
	were the identity before (by default they were set the same and
	the SEM data doesn't have any region information that would cause
	this to change) - this caused problems when we tried to register
	two AFM images.
	* nmr_RegistrationUI.Ch (createResampleImage) : 
	added the code here to hande the new option of resampling the
	Topography image onto the Projection image
	(calls a new function with a long name: 
	createResampledImageWithImageSpaceTransformation)
	* nmr_Util.Ch (createResampledImageWithImageSpaceTransformation) :
	new function that is more efficient than older createResampleImage 
	functions but assumes a 2D->2D transformation that maps directly from
	pixels in one image to pixels in other image instead of a
	3D-2D projection from world space to pixels in an image

2000-08-17  Adam Seeger  <seeger@cs.unc.edu>
	* correspondence.C (Correspondence): switched malloc to new
	* correspondence.C (init): switched malloc to new
	* correspondenceEditor.C (eventHandler): handles errors from getPoint
		better
	* correspondenceEditor.C (setImage): uses minNonZeroValue instead of
		minValue
	* nmr_Registration_Impl.C (nmr_Registration_Impl): adds some
		data member initialization that was missing
	* nmr_Registration_Impl.C (registerImages): adds stuff to handle
		fewer constraints and switches the transformation type
		accordingly in call to transformSolver
	* nmr_Registration_ImplUI.C (newScanline): creates a temporary
		image so we can do some contrast adjustment for 
		display purposes but doesn't do this yet
	* nmr_Registration_Interface.h : adds enum values to 
		nmr_TransformationType
	* transformSolve.C (transformSolver): cleaned up this function
		quite a bit, making it simpler and easier to use - some
		functionality was removed but I decided it wasn't going to
		be useful; made it easier to use the things that are in fact
		useful but weren't be used like the transformations with fewer
		parameters
	* transformSolve.h : removed a bunch of headers for old code from
		transformSolve.C and the enum xform_solution_t

2000-08-11  Kwan Torrich Skinner  <skinner@cs.unc.edu>

	* all: Merge thirdtech_branch code to trunk.

