/* The nanoManipulator and its source code have been released under the
 * Boost software license when nanoManipulator, Inc. ceased operations on
 * January 1, 2014.  At this point, the message below from 3rdTech (who
 * sublicensed from nanoManipulator, Inc.) was superceded.
 * Since that time, the code can be used according to the following
 * license.  Support for this system is now through the NIH/NIBIB
 * National Research Resource at cismm.org.

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

/*===3rdtech===
  Copyright (c) 2000 by 3rdTech, Inc.
  All Rights Reserved.

  This file may not be distributed without the permission of 
  3rdTech, Inc. 
  ===3rdtech===*/
/** \class nM_coord_change
This is a server to take the tracker position and orientation coming in from 
the phantom and pass it to a collaborator in a different coordinate system 
so we can see the hand positions of both users.
Extended to support telling the peer when we're collaborating and when we're
not, since the only place we're using that information right now is to control
display of the partner's hand icon.

\author Amy Henderson  7/13/99
\author Tom Hudson 23 Feb 2000

*/

#ifndef NM_COORD_CHANGE_H
#define NM_COORD_CHANGE_H

#include <vrpn_Tracker.h>
#include <vrpn_Connection.h>

typedef void (* PSCHANDLER) (void * userdata, vrpn_bool state);

class nM_coord_change : public vrpn_Tracker {

  public:

    nM_coord_change (const char * name, 
                     vrpn_Tracker_Remote * tracker,
                     vrpn_Connection * serverC = NULL,
                     vrpn_Connection * remoteC = NULL);
    virtual ~nM_coord_change (void);

    vrpn_bool peerIsSynchronized (void) const;

    void mainloop ();

    void bindConnection (vrpn_Connection * remoteC);
      /**< Late binding of remote connection (connection to listen
       * on for changeSyncStatus messages).
       */

    void startSync (void);
      /**< Send a message to the peer to let them know we're in sync. */

    void stopSync (void);
      /**< Send a message to the peer to let them know we're out of sync. */

    void registerPeerSyncChangeHandler (PSCHANDLER, void *);

  protected:

    static void VRPN_CALLBACK handle_tracker_pos_change (void * userdata,
						const vrpn_TRACKERCB info);

    static int VRPN_CALLBACK handle_changeSyncStatus (void * userdata, vrpn_HANDLERPARAM p);

    vrpn_int32 d_myId;
    vrpn_int32 d_changeSyncStatus_type;

    vrpn_bool d_peerIsSynced;

    struct cbList {
      PSCHANDLER cb;
      void * userdata;
      cbList * next;
    };

    cbList * d_callbacks;
};

#endif
