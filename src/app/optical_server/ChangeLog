2006-05-21  David Marshburn  <marshbur@cs.unc.edu>

	* Logging.[h,cpp]:  fixes the directory in which the log files
	are saved (was the application directory; now D:\Data\sem_video).

2006-05-21  David Marshburn  <marshbur@cs.unc.edu>

	* adds the ability to save video logs.  these are saved on the 
	server's computer.  also, this version seems to be more stable
	with respect to shutdown-related crashes.  bumped the version
	number to 2.0.

2006-02-21  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_cooke.cpp (~nmm_Microscope_SEM_cooke):  pass
	the handle instead of a pointer to a handle to PCO_CloseCamera.  this
	prevents a crash when the application closes.

2005-08-24  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_cooke.h:  added two new member variables
	for the "standard" max resolution (sensor size).
	* nmm_Microscope_SEM_cooke.cpp (setupCamera):  resets the camera
	settings to default before starting.  stores the max resolution.
	sets image parameters for the CamLink board.
	(getMaxResolution):  uses the cached max resolution (sensor size)
	instead of calling GetSizes.  	GetSizes was returning incorrect 
	values for max resolution, and this messed up all sorts of things.
	(getResolutionFromCamera):  uses GetROI now instead of GetSizes.
	(doRequestedChangesOnCooke):  finished the code to change resolution.
	in the case of binning changes, correctly recenters the ROI.
	also, throughout, more places revert to old values (and correctly
	inform relevant parties) in case of failure.


2005-08-16  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_cooke.cpp (doRequestedChangesOnCooke):  
	correctly handles binning and exposure changes.
	(acquireImage):  picks the correct bits out of the camera image.
	(setupCamera):  set the sensor format

2005-08-15  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_cooke.[h,cpp]:  removed a few last vestigial
	reference to SPOT stuff.
	(constructor):  completes the set-up of the buffers.
	(destructor):  correctly cleans up the cooke camera.
	(setupCamera):  more camera set-up stuff
	(getResolution):  just returns what we thing the resolution
	currently is instead of querying the camera driver/hardware.
	(getResolutionFromCamera):  queries the camera for its resolution.
	it turns out that this took about 100 ms on the cooke (firewire)
	setup that we had.
	(acquireImage):  now collects an image from the cooke.

2005-08-13  David Marshburn  <marshbur@cs.unc.edu>

	* edax_defs.[h,cpp]:  new, moved the definitions of edax-like stuff 
	  here from the microscope class.
	* nmm_Microscipe_SEM_optical.[h,cpp]:  new, superclass for the 
	  optical-microscope-pretending-to-be-SEM classes.
	* nmm_Microscope_SEM_cooke.[h,cpp]:  new, class for Cooke cameras
	* nmm_Microscope_SEM_diaginc.[h,cpp]:  extends 
	  nmm_Microscipe_SEM_optical instead of other classes.  also, removed
	  edax-like stuff.
	* OpticalServerInterface.[h,cpp]:  deals with the optical 
	  microscope superclass now.
	* opticalServer.cpp:  added command-line options for virtual 
	  acquisition and cooke vs. spot cameras.  dynamically creates
	  the requested camera type.
	* opticalServer.dsp:  adds new files to project.  also, changed
	  the include/link directories to the standard build-time locations.
	

2005-08-10  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_diaginc.cpp:  removed some extra print statements
	* OpticalServerInterface.cpp:  set the low end of the exposure slider
	to 80 ms, the lowest exposure on the spot camera.

2005-08-08  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_diaginc.h/cpp:  corrected a problem with
	auto-exposure; the camera is now correctly told not to do auto-
	exposure (the difference was bool vs. BOOL).
	(printSpotValues):  new.  queries the camera and prints the info.

2005-08-04  David Marshburn  <marshbur@cs.unc.edu>

	* opticalServer.cpp:  uses vrpn_Connection, not synchronized
	* nmm_Microscope_SEM_diaginc.h/cpp:  many changes
	- only changes things on the spot camera when the camera is
	in between frames.  this should stop the crashing and the
	flip-flopping of values.
	- notifies the interface more dutifully when requested
	settings fail
	- adds an exposure setting.
	* OpticalServerInterface.h/cpp:  adds controls for exposure.

2004-06-11  Russell M. Taylor II  <taylorr@cs.unc.edu>

	* OpticalServerInterface.cpp : Turned to Unix format.
	* nmm_Microscope_SEM_diaging.cpp : same.
	* opticalServer.cpp : same.

2003-12-09  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_diaginc.h/cpp:  returns to 8 bit images.  12-bit
	image capture was way too slow.  also, clips the contrast at max.
	* opticalServer.cpp:  returns to having the camera class make up data.

2003-11-22  David Marshburn  <marshbur@cs.unc.edu>

	* OpticalServerInterface.h/cpp:  adds double buffering and controls
	for image "contrast".  checks to prevent callback loops between
	c and tcl code.
	* nmm_Microscope_SEM_diaginc.h/cpp:  adds contrast controls and
	changes camera to give 12 bit, 8 bits of which are displayed and
	sent to nano with the help of the contrast controls.  adds a
	setResolutionByIndex function.  changes getBinning to take no 
	arguement and just return the bin size.
	* opticalServer.cpp:  changes to match the above changes.

2003-11-22  David Marshburn  <marshbur@cs.unc.edu>

	* OpticalServerInterface.h: removed implementation of setBinning
	and setResolutionIndex
	* OpticalServerInterface.cpp:  implementation of setBinning and
	setResolutionIndex.  Also, only sleep 10 ms in the glut idle func.
	* opticalServer.cpp:  added some initialization
	* nmm_Microscope_SEM_diaginc.h:  comment change
	* nmm_Microscope_SEM_diaginc.cpp:  virtual acquisition will now change
	resolution and binning.  Also, fixed the interplay between binning
	and resolution when either are changed (e.g., camera resolution must
	double when doubling binning to maintain the same image size).
	
2003-11-22  Russell M. Taylor II  <taylorr@cs.unc.edu>

	* OpticalServerInterface.cpp : Added version number.  Modified to
		use Tcl rather than GLUI for GUI.
	* OpticalServerInterface.h : Same.
	* nmm_Microscope_SEM_diaginc.cpp : Same.
	* opticalServer.cpp : Same.
	* opticalServerInterface.cpp
	* opticalServer.dsp : Same.
	
2003-11-22  David Marshburn  <marshbur@cs.unc.edu>
	
	* nmm_Microscope_SEM_diaginc.cpp:  only sends an image when one has
	been requested.  was accidentally sending every image captured.
	* OpticalServerInterface.cpp (OpticalServerInterface_myGlutIdle):
	sleeps for 100 msecs.
	
2003-11-22  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_diaginc.[h,cpp]:  setBinning/getBinning functions
	* nmm_Microscope_SEM_diaginc.cpp (setupCamera):  initialize binning
	and exposure on the camera.  also changes the virtual acquisition
	resolution to 1024 x 800.
	* other:  minor changes from debugging.
	
2003-11-07  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_diaginc.cpp (setupCamera):  asks the camera for
	an initial resolution, monochrome mode, 8 bits per pixel and no 
	auto-exposure.
	(nmm_Microscope_SEM_diaginc):  corrected the return value we test 
	against for the call to setupCamera.
	(setResolution):  corrected a test for resolution appropriateness
	(acquireImage):  copy the image from the camera buffer to a local one.
	* nmm_Microscope_SEM_diaginc.h:  changed the default resolution
	
2003-11-07  David Marshburn  <marshbur@cs.unc.edu>

	* all:  changes from before I got sick

2003-09-17  David Marshburn  <marshbur@cs.unc.edu>

	* nmm_Microscope_SEM_diaginc.*:  further development.  the resolutions
	available are limited as the SEM code of nano expects.

2003-09-14  David Marshburn  <marshbur@cs.unc.edu>

	* OpticalServerInterface.*:  new; beginnings of an interface
	* others:  continued development

2003-08-28  David Marshburn  <marshbur@cs.unc.edu>

	* initial version
	

