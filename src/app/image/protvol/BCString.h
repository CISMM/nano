/* The nanoManipulator and its source code have been released under the
 * Boost software license when nanoManipulator, Inc. ceased operations on
 * January 1, 2014.  At this point, the message below from 3rdTech (who
 * sublicensed from nanoManipulator, Inc.) was superceded.
 * Since that time, the code can be used according to the following
 * license.  Support for this system is now through the NIH/NIBIB
 * National Research Resource at cismm.org.

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

/******************************************************************************\
@BCString 
--------------------------------------------------------------------------------
inheritance: BCString
description: 
\******************************************************************************/

#ifndef STRING_H
#define STRING_H

#include <iostream>
using namespace std;
#include <stdio.h>
#include <string.h>


class BCString 
{
  public:

    BCString();
    BCString(int);
    BCString(const char*);
    BCString(char);
    BCString(const BCString&);

    ~BCString();

    int Length() const;
    int BytesAllocated() const;
    int Empty() const;

    int operator < (const BCString&) const;
    int operator > (const BCString&) const;
    int operator == (const BCString&) const;
    int operator <= (const BCString&) const;
    int operator >= (const BCString&) const;
    int  operator != (const BCString&) const;

    BCString& operator = (const char*);
    BCString& operator = (char);
    BCString& operator = (const BCString&);

    BCString& operator += (const char*);
    BCString& operator += (char);
    BCString& operator += (const BCString&);

    friend BCString operator + (const BCString&, const BCString&);

    char& operator[](int);

    const char* Characters() const;

    operator const char*() const;

    friend ostream& operator << (ostream&, const BCString&);
    friend istream& operator >> (istream&, BCString&); 

  protected:

    int _length;
    int _bytesAllocated;
    char* _str; 

  private:

};
 

//----------------------------------------------------------------------
// inline functions
//----------------------------------------------------------------------

/******************************************************************************\
@~BCString() --> destructor
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline BCString::~BCString()
{
    delete [] _str;
}


/******************************************************************************\
@Length
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline int 
BCString::Length() const
{
    return _length;
}


/******************************************************************************\
@BytesAllocated
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline int 
BCString::BytesAllocated() const
{
    return _bytesAllocated;
}


/******************************************************************************\
@Empty
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline int 
BCString::Empty() const
{
    return _length == 0;
}


/******************************************************************************\
@operator <
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline int BCString::operator < (const BCString &s) const
{
    return (strcmp(_str, s._str) < 0);
}


/******************************************************************************\
@operator >
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline int 
BCString::operator > (const BCString &s) const
{
    return (strcmp(_str, s._str) > 0);
}


/******************************************************************************\
@operator ==
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline int 
BCString::operator == (const BCString &s) const
{
    return (strcmp(_str, s._str) == 0);
}


/******************************************************************************\
@operator <=
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline int
BCString::operator <= (const BCString &s) const
{
    return (strcmp(_str, s._str) <= 0);
}


/******************************************************************************\
@operator >=
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline int 
BCString::operator >= (const BCString &s) const
{
    return (strcmp(_str, s._str) >= 0);
}


/******************************************************************************\
@operator !=
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline int 
BCString::operator != (const BCString &s) const
{
    return (strcmp(_str, s._str) != 0);
}


/******************************************************************************\
@Characters
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline const char* 
BCString::Characters() const 
{ 
    return &(_str[0]); 
}


/******************************************************************************\
@operator const char*
--------------------------------------------------------------------------------
   description: 
        author: Kimberly Passarella Jones
 last modified: 2-5-95 by Kimberly Passarella Jones
\******************************************************************************/
inline BCString::operator const char*() const
{
    return &(_str[0]);
}


#endif // STRING_H







