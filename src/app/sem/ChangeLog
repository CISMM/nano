2001-09-01  Adam Seeger  <seeger@cs.unc.edu>

        * nmm_Microscope_SEM_EDAX.hC (convert_DAC_to_nm): new function
        (convert_nm_to_DAC): new function
	a bunch of new code to handle point reporting, setting of
	dot spacing, line spacing, magnification, timing test
	exposure status gets reported automatically once every second of
        dwell time (should match very closely actual time if things are 
        running correctly)
	(exposureTimingTest), (exposePattern): changed these functions 
	to use ExposurePattern class and they now run in realtime priority
	mode to ensure precise timing based on code execution time

2001-08-20  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM_EDAX.C(goToPoint): added a more precise 
	delay here to dwell for the requested time
	(reportExposureStatus): new function
	* delay.Ch: a utility class to add a busywait delay

2001-07-22  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM_EDAX.C (acquireImage): for fake data, offsets the
	center of the pattern so its not so symmetric (to facilitate debugging
	image flipping problems)

2001-07-17  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM_EDAX.C (nmm_Microscope_SEM_EDAX): 
	made it so the constructor automatically assigns 
	vrpn_TRUE to d_virtualAcquisition if VIRTUAL_SEM is defined at compile 
	time (you need the compile time flag for running on a machine without
	the dlls installed and the runtime flag gives you the option to test
	without the hardware using the same executable used with the hardware)

2001-05-14  Adam Seeger  <seeger@cs.unc.edu>

	* edax_server.C : replaced vrpn_SleepMsecs call with timeout parameter
		passed to connection.mainloop()
	* nmm_Microscope_SEM_EDAX.C : added handlers for new pattern shape
	messages; added d_virtualAcquisition flag to control whether
	or not we use the EDAX library although this doesn't allow us
	to completely replace the compile time flag because of edax
	include files; uncommented out SpMoveEx now that we are 
	compiling with a more recent version of the edax library that 
	has it
	        - uncommented out USE_BUSYWAIT_DELAY - this is definitely
	necessary since the set dwell time has no effect on the time
	to execute SpMoveEx which is constant at 100usec
		- changed video polarity to be inverted since this matches
	the Hitachi display; also, changed default dwell time for image
	collection to be 1000 nsec instead of 100 nsec

2001-03-02  Adam Seeger  <seeger@cs.unc.edu>

	This is the first version that works for point mode.
	* nmm_Microscope_SEM_EDAX.C : disabled a bunch of calls to the column
	and stage libraries because these don't work right until we get version
	3.3 of the libraries from EDAX
	added calls to SgSetScanParams, disabled for now until I can test them
	Added a critical call to SetSgScan(EDAX_SPOT_MODE)
	Added error printout for point commands that are out of range
	Added commented out call to SpMoveEx - this will be needed when we
	get the 3.3 version of the scan generator library that lets us use
	the full x and y resolution

2001-02-05  Adam Seeger  <seeger@cs.unc.edu>

	* edax_server.C : commented-out call to atexit()
	* nmm_Microscope_SEM_EDAX.[Ch] : added stuff to handle new message types
	SetPointDwellTime, SetBeamBlankEnable, GoToPoint, SetRetraceDelays,
	and SetDACParams
        (nmm_Microscope_SEM_EDAX) : added test of stage and column control
	libraries - these might be useful despite the inadequate Hitachi
	interface that constrains them
        (setHardwareConfiguration) : changed name to configureSharedSettings
	(configureScan) : changed name to configureForImageMode
	(configureForPointMode) : new function
	various changes to use utility functions in nmm_EDAX
	* sem_server.dsp : added library files for state and column control

2000-11-29  Adam Seeger  <seeger@cs.unc.edu>

	* nmm_Microscope_SEM_EDAX.C : added automatic relinquishing of external
	control when not scanning - has problem at 64x50 resolution with
	detecting non-scanning condition too early (hence the clicking noise)
	- should be looking at a flag saying whether or not scanning has been
	turned off remotely but this is okay for now
	added stuff for sending 16-bit data when code expects to be reading
	16-bit data but this still gets filled with 8-bit pixels (need help
	from EDAX for this)
