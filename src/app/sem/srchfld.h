/* The nanoManipulator and its source code have been released under the
 * Boost software license when nanoManipulator, Inc. ceased operations on
 * January 1, 2014.  At this point, the message below from 3rdTech (who
 * sublicensed from nanoManipulator, Inc.) was superceded.
 * Since that time, the code can be used according to the following
 * license.  Support for this system is now through the NIH/NIBIB
 * National Research Resource at cismm.org.

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

#ifndef SRCHFLD_H
#define SRCHFLD_H

extern "C" {
   typedef struct tagSTGLOCA {
		long x;
		long y;
		long z;
		long r;
		long t;
		long w;
		} STGLOCA;
   typedef struct tagSTGDEF {
		int model;          /* 1=GALIL,... */
		int isEnabled;	/* control:0=disabled,1=enabled */
		int ioComm;         /* 1=COMM1, 2=COMM2	*/
		int dataBits;
		int stopBits;
		int baudRate;
		char parity;
		char dummy;
		int timeOut;		/* timeout for stage Timer in millisec. */
		int pollCount;		/* maximum number of pollings	*/
		int param[4];		/* not used */
		STGLOCA limit1;
		STGLOCA limit2;
		STGLOCA error;      /* stage resolution [microns]	*/
		float usecPerLoop;
		float xmitDelay;   /* milliseconds */
		float recvDelay;   /* milliseconds */
		} STGDEF;
   typedef struct tagCLMLOCA {
		int iScopeLoca;		/* location in the scope location table */
		long kv;
		long mag;
		long crt;
		long spt;
		float t;	/* unused */
		float u;	/* unused */
		float v;	/* unused */
		float w;	/* unused */
		} CLMLOCA;
   typedef struct tagCLMDEF {
		int model;          /* 0=ABT_32,1=ABT_60,... */
		int isEnabled;	/* control:0=disabled,1=enabled */
		int ioComm;         /* 1=COMM1, 2=COMM2	*/
		int dataBits;
		int stopBits;
		int baudRate;
		char parity;
		char dummy;
		int timeOut;		/* timeout for column Timer in millisec. */
		float usecPerLoop;
		float xmitDelay;   /* milliseconds */
		float recvDelay;   /* milliseconds */
		} CLMDEF;
 typedef struct tagSRCHLOCA {
   float version;
   int lowThre;	/* lower gray level threshold for particle search */
   int uppThre;	/* upper gray level threshold for particle search */
   float minSize;	/* minimum particle size in microns */
   float maxSize;	/* maximum particle size in microns */
   float mppX;	    /* microns per pixel in X direction */
   float mppY;	    /* microns per pixel in Y direction */
   float preset;    /* preset time for EDS collection	*/
   int saveAllSpectra;
   int saveAllImages;
   int i1;			/* output format: 0=ZEP,1=CSV,2=ZEP&CSV */
   int i2;			/* search control: 0=disabled,1=enabled */
   int i3;	/* unused */
   int i4;	/* unused */
   float f1;	/* unused */
   float f2;	/* unused */
   float f3;	/* unused */
   float f4;	/* unused */
   } SRCHLOCA;
 typedef struct tagSRCHFLD {
	STGLOCA 	stgLoca;
	CLMLOCA 	clmLoca;
	SRCHLOCA 	srchLoca;
	} SRCHFLD;

};
#endif



