2002-09-27  Adam Seeger  <seeger@cs.unc.edu>

	Added a few changes to fix some problems encountered during 
	testing - simple features needed and minor bugs

	* controlPanels.C: added control to set magnification of an image
	(handleSEMChange): fixed autoenable feature when acquiring 
    SEM images so it updates the display parameter controls
    * patternEditor.C: added display of current segment length for the
	current shape being drawn
	(zoomBy): fixed zooming so it keeps the center of zooming at the mouse
	instead of translating it to the center of the image
	(drawPattern): changed default pattern transformation to use when
	drawing without a canvas image
	* patternShape.C (drawToDisplay): changed the various versions of this
	to provide one that lets you give a specific color instead of
	a color map so that the current object being drawn can be given a 
    special color not related to its exposure
	(getPointInWorld): new function used to compute line segment lengths
	(numPoints): new function

2002-09-07  Adam Seeger  <seeger@cs.unc.edu>

    This version has a new feature that lets patterns be linked to a 
    particular image and warped in the same way that image gets warped.
	This allows a pattern to be drawn before the alignment step so the
    delay between alignment and exposure is much less. 

	* controlPanels.C (handle_canvasImage_change) : new function to go
	with new selector in the control panel for selecting a canvas image
	* main.C (main): added call to Tclnet_init so the Tclnet variables in
	registration work properly
	* patternEditor.C (setCanvasImage): new function
	numerous changes involved in changing the pattern coordinate system to
	be linked to a particular image
	* patternShape.C: added parentFromObject transform so that
	shapes can be transformed easily. CompositePatternShape now lets you
	create a transformation hierarchy
	(PolylinePatternShape::computeSidePoints): fixed this so it first
	transforms the points into world coordinates before computing the
	sides of the fat line and then transforms the side points back into
	local coordinates
	(addPoint, setLocation): now assume points are given in world coordinates
	and transform points into local coordinates before storing them

2002-05-13  Adam Seeger  <seeger@cs.unc.edu>

	* patternEditor.C (show): disabled display of navigation window 
            because it doesn't work very well
	  (saveImageBuffer): changed this to use ImgMagick
	* main.C (main): added initMagick()
	* controlPanels.hC : changed to use ImgMagick

2002-04-11  Adam Seeger  <seeger@cs.unc.edu>

	* changed #include <list.h> to #include <list>; added
	"using namespace std;" where necessary as well as a few compile
	settings and adding some files to make the program compile and bring
        this code up to date with changes elsewhere in the nano code.

2002-03-20  Aron Helser  <helser@cs.unc.edu>

	* controlPanels.C: Handle replacement BCString -> string
	* main.C: same

2001-01-08  Adam Seeger  <seeger@cs.unc.edu>

	* patternEditor.C (updateDisplayTransform): fixed bug here so it
	won't try to set the transform for the image when NULL is passed in
	for the transformation (indicating that we just want the image to
	be redrawn)
	
2001-12-18  Adam Seeger  <seeger@cs.unc.edu>

	* patternEditor.C (setImageOpacity): added a call to sort the images
	since the order now depends on opacity
	(updateDisplayTransform): changes the worldToImage transformation in
	the image object and recalculates the image overlay order in the display
        * patternEditor.h (ImageElement::operator<): checks opacity too now
	so if an image is smaller or less opaque then it gets to go in front
	of the other images
	* seegerizer_common.dsp : added new files from registration library

2001-11-29  Adam Seeger  <seeger@cs.unc.edu>

	This version includes changes to make the program run with the
	same code from nmr_RegistrationUI.Ch as is used in nano
	There seems to be a problem with the texture transform updates not 
	being done but otherwise it runs fine.

2001-11-27  Adam Seeger  <seeger@cs.unc.edu>

	This version includes minimal changes needed to compile with the
	new code in the nano source tree
	* patternEditor.C: this now inherits from nmb_ImageDisplay so it
	can get messages from the nmr_RegistrationUI code used in nano

2001-10-23  Adam Seeger  <seeger@cs.unc.edu>

	* controlPanels.C: added controls for testing automatic alignment
	* main.C: fixed a bug caused by initializing the Tcl list of
	image names before a corresponding list of images in C had been
	created

2001-09-04  Adam Seeger  <seeger@cs.unc.edu>

	* controlPanels.C (handle_saveImageFileName_change): changed this
	so it closes the file right after checking if it exists and doesn't
	leave it open during the call to exportToFile() - this was preventing
	ImgMagick from writing to the file

2001-09-01  Adam Seeger  <seeger@cs.unc.edu>

	* Makefile - added dependence on nmMP and an include directory for
        nmm_Microscope_EDAX.h - this should be in a library instead of in
        an application directory
	* controlpanels.hC - added separate line and area dose settings,
        added separate dot and line spacing settings
        added a checkbox to control reporting of dwell points
        added display of minimum allowed dot and line doses
        added automatic display of just-acquired SEM image in the main window
         and removed code for the separate SEM image window
        fixed bug with magnification setting not getting reported to server
        took out beam width setting - replaced with dot and line spacing
        several changes related to redesign of PatternShape classes
	* exposurePattern.C - moved most code from here to patternShape.C
        this file now contains a single class derived from 
        CompositePatternShape that describes a complete pattern
        * exposureManager.C - moved all code into patternShape.C
        * exposureUtil.hC - some utility functions for calculating dwell times
        and doses
        * main.C : added some code to calculate appropriate window positions
        put a sleep for 10 milliseconds in the server main loop so it doesn't
        hog the cpu when it is idle
        * patternEditor.Ch : added a window position parameter to the 
        constructor and a function to set the window position
	* fakeSEM.dsp, seegerizer.dsp, seegerizer_common.dsp:
	organized the simulated and real SEM versions of the program into two
	separate app projects and a library project that the two apps depend 
	on - this simplifies maintenance of the project files and
	speeds up compilation
	* edgeTable.h : new file to contain class used by PolygonPatternShape
	for drawing on the SEM
        * patternShape.hC: new files that contain much of code that was in
	exposureManager.hC and exposurePattern.hC
        added class to manage coloring by exposure and display of the
          corresponding legend
        (updateExposureLevels): new function to update the coloring by exposure
        level data

        things to do and bugs to fix (from test on 8/31/2001):
          * when you save image data from SEM the file doesn't get written
          * use different color to indicate when a shape hasn't been finished
          * use better colors to indicate exposure levels
          * save all parameters to a file (current, dot and line spacing...)
          * allow selection and more modification features for drawing
 	  * add mechanism to associate a pattern file with an image file such
	    that transformations applied to the image also get applied to the
            pattern - this will allow user to use predrawn patterns
          * add a way to save transformations associated with image files
          * add a measure marker feature to make it easier to measure distances
          * add some kind of way to keep user from using a dose which
            is below the minimum possible dose given the current, dot, and
            line spacing - currently there is just a printed warning when the
            dose is set below what is possible

2001-08-20  Adam Seeger  <seeger@cs.unc.edu>

	* controlPanels.C (handle_openPatternFileName_change),
                          (handle_savePatternFileName_change): 
        adds capability to save and load files containing
	vector descriptions of exposure patterns
	(handle_addTestGrid_change): adds a special grid shape to the pattern
	handleSEMChange): added a progress display to the exposure control panel
	(handle_semDoTimingTest_change): this function will be used to make
        measurements which will determine the timing of exposures based on
	the time to execute the code that controls the SEM - 
	I need to break up the exposePattern() function into one that just does
	this and one that just does the exposure
	* exposureManager.C (exposePattern): many changes to the client and
	server versions of this function to make it possible to execute these
	in various test modes for timing measurements - also, fixes many
	problems with timing of exposure
	this function now gets called recursively in order
	to traverse a hierarchical shape list (used for the test grid feature)
	* exposurePattern.Ch: made two new shape types for dump points and 
        composite shapes and added drawing routines for these

	* main.C (main): made it so if the server is running in the same
	process it now runs in its own thread and communication is
	synchronized through the nmb_Device message buffer which is now
	protected by a mutex (this was necessary to let the user interface
	code run at the same time as the exposure code so that intermediate
	status updates for the exposure can be displayed to the user)
	Added a flag that is mirrored in tcl so that certain controls are
	disabled during an exposure (this is simply to increase 
	user-friendliness because there is no reason we can't add more commands
	on after the current one which initiated the exposure but they won't
	be executed until after the exposure is done so it is better to keep
	the user from filling up the command queue like this)
	(serverThreadStart): this is the function that contains the 
	server mainloop

	* patternEditor.C (addDumpPoint): removed (no longer a special case)
	(updateDumpPoint): "
	(addTestGrid): convenience function to add a grid shape
	(getViewport): new function
	(clampMainWinRectangle): new function - this is related to various
	other changes to fix badness in the zooming interface
	(navWinEventHandler): fixed a bunch of problems with this - user is
	now constrained to select a region that has the right aspect ratio
	(in general): replaced a bunch of ImageViewer coordinate and dimension
	transformation function calls with ones that are more general
	(mainWinEventHandler): added ability to specify dump points

	* patternFile.Ch: new class to manage files that store patterns

2001-07-24  Adam Seeger  <seeger@cs.unc.edu>

	* Makefile - made this program compile on sgi
	* controlPanels.C (ControlPanels): changed default size of SEM window
	* main.C (main): added glutInitWindowSize, glutInitWindowPosition
	* patternEditor.C (PatternEditor): changed default position of
	windows and initial (assumed) window sizes
	(setViewport): made this so it sets the window to have the same
	aspect ratio as the requested region by adjusting the window width
	(handleMainWinEvent): on resize event, forces the aspect ratio to
	match that of the viewed region by readjusting the window width;
	on a left button press, took out an extra call to ImageViewer::toImage()
	(mainWinDisplayHandler): reorganized code that adjusts openGL matrix
        stacks
	(drawImageAsTexture): removed this function (in ImageViewer now)
	(drawImageAsPixels): "
	(navWinPositionToWorld): fixed this since it wasn't quite right before

2001-07-22  Adam Seeger  <seeger@cs.unc.edu>

	* main.C (main): set default scaling of an image loaded from a file
        to be half the size of the live image so that it can be seen when 
        it is displayed - the user is supposed to set this through the
        alignment controls
	* controlPanels.C (handle_openImageFileName_change): "
	(handleSEMChange): when an SEM image is created as a result of 
	receiving data it is added to the patternEditor before its
	region is set, added a patternEditor::newPosition() call to notify
	it of the region change
        * patternEditor.C (mainWinDisplayHandler): took out 2D texture enable
	and disable calls and put them into the drawImageAsTexture function;
	added swap of temporary region information during adjustments into the
	region information used for drawing so that things are consistent
        (drawImage): split this into two functions, one for drawing images as
	a textured polygon and another for drawing images using glDrawPixels
	when that is possible (no rotation or shear)
	(drawImageAsTexture): new function containing old code from drawImage
	(drawImageAsPixels): new function to translate scaling and translation
	information for an image into the appropriate openGL commands to scale
	and translate the image when drawn using glDrawPixels
	(navWinDisplayHandler): flipped transformation in X
	(navWinPositionToWorld): flipped X and Y
	(mainWinPositionToWorld): flipped X and Y
	(worldToMainWinPosition): flipped X and Y

2001-07-17  Adam Seeger  <seeger@cs.unc.edu>

	Most changes here are to get this code to work with the latest 
	code in nano/src/lib/nmBase, nano/src/app/nano/lib/nmReg
	exception:
	* patternEditor.C (addImage): fixed this to insert the image in the
	right order (so smaller images are drawn last)

2001-05-31  Aron Helser  <helser@cs.unc.edu>

	* main.C (main): Tell tcl script value of tcl_script_dir

2001-05-14  Adam Seeger  <seeger@cs.unc.edu>

	* controlPanels.C : added code to let you save data images
		started adding stuff for saving resampled data (not just
		screen buffer because this doesn't give enough control over
		resolution or blending algorithms)
                commented out several printfs for messages and added one
		to let you see how dwell times are affected by changing
		various exposure-related parameters
	* exposureManager.C : added code to use shape messages instead of
		decomposing the pattern into point messages
		and moves this file's point calculations into the server (this
		file is now compiled into the server)
		(exposePattern): new version of this that operates inside the
		server code instead of the client code so that point 
		calculations can be done inside the server
                (getDwellTimes): returns the dwell times for point and area
		exposures as determined by previous calls to set exposure
		parameters
		(getNextPoint): commented out debugging printout for 
		polygon scan conversion
	* main.C : added stuff for running SEM server in the same process
	* patternEditor.Ch : moved PatternShape and PatternPoint classes into
		a separate file called exposurePattern.Ch
	* exposurePattern.Ch : new file - see previous note

2001-03-29  Adam Seeger  <seeger@cs.unc.edu>

	* patternEditor.C : changes to load textures without using mipmapping

2001-03-06  Adam Seeger  <seeger@cs.unc.edu>

        I think this version draws polygons at least approximately right
        The parts near y-max for the polygon seem a bit truncated so
        maybe its stopping too early
        * exposureManager.C (initPolygon): new function
                            (getNextPoint): handles polygon scan conversion
                            going from y-min to y-max

2001-03-05  Adam Seeger  <seeger@cs.unc.edu>

        I think this version draws lines with width correctly
        * controlPanels.C (handleSEMChange): doesn't print out dwell time
        unless its changed
        * exposureManager.C : changed thin line exposure to use the
        initShape(), getNextPoint() interface
        Added code to send point commands for polylines with non-zero width
        as well - builtin to the same interface and designed to match what
        the graphics display for polylines with width - this tests area
        exposure calculations
        * patternEditor.C : flips y axis in several places to make 
        coordinates consistent (I think)
         

2001-03-02  Adam Seeger  <seeger@cs.unc.edu>
	
 	This is the first version that draws lines correctly
	* Makefile: added glut to USES_EXTERNAL_LIBS
 	* controlPanels.C: sets d_exposure_uCoulombs_per_square_cm to 300 by
	default instead of 0
	replaced calculations converting magnification to scan region with
	calls to nmm_Microscope_SEM_Remote::getScanRegion_nm in order to 
	keep things consistent
	* exposureManager.C: changed default overlap factor for 
	lines and areas to 2 and 4 instead of 0.7 and 0.7
	(convert_nm_to_DAC): to compensate for the flipped Y elsewhere in 
	the program we needed to flip Y here, I think I've correctly unflipped
	it in the rest of the program so the old version should now be correct
	* main.C: changed registration code so it always goes through vrpn
	* patternEditor.C (zoomBy) : this preserves aspect ratio now
	(newPosition) : sorts images by area so bigger ones are drawn first
	(addImage): maintains the sorted image order
	(drawImage): fixed so it does color scaling correctly on matrox g400

2001-02-14  Adam Seeger  <seeger@cs.unc.edu>

	* this version compiles with glut on sgi (this port was motivated 
	by the need to check for memory bugs)
	* Makefile - changed the order of libraries and added V_GLUT flag to
	get the program to compile on sgi 
        * controlPanels.C (handle_openImageFileName_change): sets worldToImage
 	transformation to a reasonable default value when loading new images
	and reads them in using recently added functions 
        nmb_ImageGrid::openFile and nmb_ImageGrid::getNextImage
	* controlPanels.C : added new tool modes for setting dump points and 
	selecting/grabbing
	* controlPanels.C (handleSEMChange): fixed problem with creating a new
	image for sem data and adding its name to the list of image names 
     	before adding the image to the list of images (tcl callbacks got called
	at the wrong time)
	* main.C (init_Tk) : added stuff for Itcl and Itk static loading
	(needed for sgi but not for pc_win32)
	* patternEditor.C (addDumpPoint): new function
	 (updateDumpPoint): new function
	 (findNearestShapePoint): new function
	 (findNearestPoint): new function
	 (drawImage): uses opacity value now for alpha
	 (worldToMainWinPosition): new function
	 (mainWinNMToPixels): new function
	 (selectPoint): new function
	 (updateGrab): new function

2001-02-05  Adam Seeger  <seeger@cs.unc.edu>

	* this is the first version of the seegerizer program that contains
          all advertised main features in some form
          1) alignment of old data with live data
          2) control over SEM including image acquisition and pattern
             drawing (for 0-width polylines only)
          3) pattern design/editing (polylines with width, polygons)

         to do:
          exposure calculations for filled shapes
          use of the exposure settings in actual pattern writing
          crosshair cursor for drawing window
