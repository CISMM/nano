2001-07-24  Adam Seeger  <seeger@cs.unc.edu>

	* Makefile - made this program compile on sgi
	* controlPanels.C (ControlPanels): changed default size of SEM window
	* main.C (main): added glutInitWindowSize, glutInitWindowPosition
	* patternEditor.C (PatternEditor): changed default position of
	windows and initial (assumed) window sizes
	(setViewport): made this so it sets the window to have the same
	aspect ratio as the requested region by adjusting the window width
	(handleMainWinEvent): on resize event, forces the aspect ratio to
	match that of the viewed region by readjusting the window width;
	on a left button press, took out an extra call to ImageViewer::toImage()
	(mainWinDisplayHandler): reorganized code that adjusts openGL matrix
        stacks
	(drawImageAsTexture): removed this function (in ImageViewer now)
	(drawImageAsPixels): "
	(navWinPositionToWorld): fixed this since it wasn't quite right before

2001-07-22  Adam Seeger  <seeger@cs.unc.edu>

	* main.C (main): set default scaling of an image loaded from a file
        to be half the size of the live image so that it can be seen when 
        it is displayed - the user is supposed to set this through the
        alignment controls
	* controlPanels.C (handle_openImageFileName_change): "
	(handleSEMChange): when an SEM image is created as a result of 
	receiving data it is added to the patternEditor before its
	region is set, added a patternEditor::newPosition() call to notify
	it of the region change
        * patternEditor.C (mainWinDisplayHandler): took out 2D texture enable
	and disable calls and put them into the drawImageAsTexture function;
	added swap of temporary region information during adjustments into the
	region information used for drawing so that things are consistent
        (drawImage): split this into two functions, one for drawing images as
	a textured polygon and another for drawing images using glDrawPixels
	when that is possible (no rotation or shear)
	(drawImageAsTexture): new function containing old code from drawImage
	(drawImageAsPixels): new function to translate scaling and translation
	information for an image into the appropriate openGL commands to scale
	and translate the image when drawn using glDrawPixels
	(navWinDisplayHandler): flipped transformation in X
	(navWinPositionToWorld): flipped X and Y
	(mainWinPositionToWorld): flipped X and Y
	(worldToMainWinPosition): flipped X and Y

2001-07-17  Adam Seeger  <seeger@cs.unc.edu>

	Most changes here are to get this code to work with the latest 
	code in nano/src/lib/nmBase, nano/src/app/nano/lib/nmReg
	exception:
	* patternEditor.C (addImage): fixed this to insert the image in the
	right order (so smaller images are drawn last)

2001-05-31  Aron Helser  <helser@cs.unc.edu>

	* main.C (main): Tell tcl script value of tcl_script_dir

2001-05-14  Adam Seeger  <seeger@cs.unc.edu>

	* controlPanels.C : added code to let you save data images
		started adding stuff for saving resampled data (not just
		screen buffer because this doesn't give enough control over
		resolution or blending algorithms)
                commented out several printfs for messages and added one
		to let you see how dwell times are affected by changing
		various exposure-related parameters
	* exposureManager.C : added code to use shape messages instead of
		decomposing the pattern into point messages
		and moves this file's point calculations into the server (this
		file is now compiled into the server)
		(exposePattern): new version of this that operates inside the
		server code instead of the client code so that point 
		calculations can be done inside the server
                (getDwellTimes): returns the dwell times for point and area
		exposures as determined by previous calls to set exposure
		parameters
		(getNextPoint): commented out debugging printout for 
		polygon scan conversion
	* main.C : added stuff for running SEM server in the same process
	* patternEditor.Ch : moved PatternShape and PatternPoint classes into
		a separate file called exposurePattern.Ch
	* exposurePattern.Ch : new file - see previous note

2001-03-29  Adam Seeger  <seeger@cs.unc.edu>

	* patternEditor.C : changes to load textures without using mipmapping

2001-03-06  Adam Seeger  <seeger@cs.unc.edu>

        I think this version draws polygons at least approximately right
        The parts near y-max for the polygon seem a bit truncated so
        maybe its stopping too early
        * exposureManager.C (initPolygon): new function
                            (getNextPoint): handles polygon scan conversion
                            going from y-min to y-max

2001-03-05  Adam Seeger  <seeger@cs.unc.edu>

        I think this version draws lines with width correctly
        * controlPanels.C (handleSEMChange): doesn't print out dwell time
        unless its changed
        * exposureManager.C : changed thin line exposure to use the
        initShape(), getNextPoint() interface
        Added code to send point commands for polylines with non-zero width
        as well - builtin to the same interface and designed to match what
        the graphics display for polylines with width - this tests area
        exposure calculations
        * patternEditor.C : flips y axis in several places to make 
        coordinates consistent (I think)
         

2001-03-02  Adam Seeger  <seeger@cs.unc.edu>
	
 	This is the first version that draws lines correctly
	* Makefile: added glut to USES_EXTERNAL_LIBS
 	* controlPanels.C: sets d_exposure_uCoulombs_per_square_cm to 300 by
	default instead of 0
	replaced calculations converting magnification to scan region with
	calls to nmm_Microscope_SEM_Remote::getScanRegion_nm in order to 
	keep things consistent
	* exposureManager.C: changed default overlap factor for 
	lines and areas to 2 and 4 instead of 0.7 and 0.7
	(convert_nm_to_DAC): to compensate for the flipped Y elsewhere in 
	the program we needed to flip Y here, I think I've correctly unflipped
	it in the rest of the program so the old version should now be correct
	* main.C: changed registration code so it always goes through vrpn
	* patternEditor.C (zoomBy) : this preserves aspect ratio now
	(newPosition) : sorts images by area so bigger ones are drawn first
	(addImage): maintains the sorted image order
	(drawImage): fixed so it does color scaling correctly on matrox g400

2001-02-14  Adam Seeger  <seeger@cs.unc.edu>

	* this version compiles with glut on sgi (this port was motivated 
	by the need to check for memory bugs)
	* Makefile - changed the order of libraries and added V_GLUT flag to
	get the program to compile on sgi 
        * controlPanels.C (handle_openImageFileName_change): sets worldToImage
 	transformation to a reasonable default value when loading new images
	and reads them in using recently added functions 
        nmb_ImageGrid::openFile and nmb_ImageGrid::getNextImage
	* controlPanels.C : added new tool modes for setting dump points and 
	selecting/grabbing
	* controlPanels.C (handleSEMChange): fixed problem with creating a new
	image for sem data and adding its name to the list of image names 
     	before adding the image to the list of images (tcl callbacks got called
	at the wrong time)
	* main.C (init_Tk) : added stuff for Itcl and Itk static loading
	(needed for sgi but not for pc_win32)
	* patternEditor.C (addDumpPoint): new function
	 (updateDumpPoint): new function
	 (findNearestShapePoint): new function
	 (findNearestPoint): new function
	 (drawImage): uses opacity value now for alpha
	 (worldToMainWinPosition): new function
	 (mainWinNMToPixels): new function
	 (selectPoint): new function
	 (updateGrab): new function

2001-02-05  Adam Seeger  <seeger@cs.unc.edu>

	* this is the first version of the seegerizer program that contains
          all advertised main features in some form
          1) alignment of old data with live data
          2) control over SEM including image acquisition and pattern
             drawing (for 0-width polylines only)
          3) pattern design/editing (polylines with width, polygons)

         to do:
          exposure calculations for filled shapes
          use of the exposure settings in actual pattern writing
          crosshair cursor for drawing window
