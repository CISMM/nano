/* The nanoManipulator and its source code have been released under the
 * Boost software license when nanoManipulator, Inc. ceased operations on
 * January 1, 2014.  At this point, the message below from 3rdTech (who
 * sublicensed from nanoManipulator, Inc.) was superceded.
 * Since that time, the code can be used according to the following
 * license.  Support for this system is now through the NIH/NIBIB
 * National Research Resource at cismm.org.

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

#ifndef NMB_PLANE_SELECTION_H
#define NMB_PLANE_SELECTION_H

// nmb_PlaneSelection


class BCPlane;  // from BCPlane.h
class BCGrid;  // from BCGrid.h
class nmb_Dataset;  // from nmb_Dataset.h
/**
This class contains pointers to the planes that are mapped.  It contains
a lookup function to find the current values of all the planes from the
inputGrid.  This class was created to be used as a parameter to functions
that need to know the planes (such as the draw functions).  This allows
planes to be added without having to change all of the code that calls
the routines, since it just calls the lookup() member to fill it in.

We could, instead, consider putting these pointers on nmb_Dataset
(in place of the Tclvar_Strings there).
*/
class nmb_PlaneSelection {

  public:

    nmb_PlaneSelection (void);
    ~nmb_PlaneSelection (void);

    void lookup (nmb_Dataset *);
      ///< Fills in the data members with current data from nmb_Dataset

    void lookup (BCGrid *,
                 const char * heightName, const char * colorName,
                 const char * contourName, const char * opacityName,
				 const char * alphaName, const char * maskName,
				 const char * transparentName, const char * vizName);

    void lookupPrerenderedColors (BCGrid *);
    void lookupPrerenderedDepth (BCGrid *);

    BCPlane * height;
    BCPlane * color;
    BCPlane * contour;
    BCPlane * opacity;
    BCPlane * alpha;

	//Visualization related planes
	BCPlane * mask;
	BCPlane * transparent;
	BCPlane * viz;

    /// Support for prerendered surfaces
    BCPlane * red;
    BCPlane * green;
    BCPlane * blue;
};

#endif  // NMB_PLANE_SELECTION_H
